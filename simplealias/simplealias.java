//When removing proton dispersion from data window, the window is not really removed after edition . reset better the proton dispersion aray.
/// line widths
// write less digit for SW
//o2p in Hz ..... 9379.7674318381/125.767168767432=74.5804
import java.applet.Applet;
import java.lang.Object;
import java.io.*;
//import java.math;
import java.util.StringTokenizer;

import java.awt.*;
import java.awt.event.*;
//import java.awt.datatransfer.*;



public class simplealias extends Applet  {
		private double sfo=0*70+0*125.757789d,o2p=0d;
		private Slider       slider       = new Slider(10000,10,0,1000000,sfo);
        private DjPanel     djPanel       = new DjPanel(this,slider,sfo,o2p);
		

	public void init() {
		sfo = Double.parseDouble(getParameter("sfo"));
		slider.setSfo(sfo);
		djPanel.setSfo(sfo);
		setLayout(new BorderLayout(10,10));
		add(djPanel,"Center");
		add(slider,"South");
		slider.setLocation(0,300);                                        
	}
	public void setSfo(String message2) 
    { 
		sfo = Double.parseDouble(message2);
		slider.setSfo(sfo);
		djPanel.setSfo(sfo);

    }
	public void seto2p(String message2) 
    { 
		o2p = Double.parseDouble(message2);
		djPanel.seto2p(o2p);
			this.showStatus("O2p from javascript  " + o2p  + "");

    }
	public void setData(String message2) 
    { 
		djPanel.setData(message2);
			this.showStatus("Data from javascript ");

    }
}

class DjPanel extends BorderedPanel implements DialogClient, AdjustmentListener, ActionListener
 {
   public String comment="",commentopt="";
	public double sfo;
    private Slider slider;
//	private ControlPanel controlPanel;
	public double omin,omax,min,max;
	public int  ov1,ov3,ov2,aa,bb,nbc; /*number of carbone*/
	/*sw0,td0,swa,tda,number,ppm,lv*/
	public double inputt1max=1.0d;
	public int sasi[][]=   new int[1000][1000];
	public  double[] ppm = new double[1000];
	public  double[] ol = new double[1000];
	public  double[] addelta = new double[1000];
	public  double[] lw  = new double[1000];
	public double[][] protdim=   new double[1000][1000];   /// CCOORREECCTTT TTTHHIISSS UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU
	public double scaleh,offseth;	
	
	 /* for display may have more regions in aliasd than full because signals near border*/
	 	 public int samplenumber,sampletot;
		 
	
public String data[][]={

//	{"test1","50.0269972","5732","0.2661423260366196","32","7","50.0","49.56","49.533","20.432","19.32","18.45","18.440","0.6","0.6","0.6","0.6","0.6","0.6","0.6","0","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""},
//	{"test2","155.17","14000","0.333","32","7","150.0","49.56","49.533","20.432","19.32","18.45","17","0.66",".6","0.6","0.6","0.6","0.6","0.6","0","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""},
//	{"glue min t1,max (TD = 70)","35.378999304","2058","1.179347224","70","12","95.968 ","92.148 ","76.009 ","75.812 ","74.187 ","72.814 ","71.536 ","71.490","69.697 ","69.653 ","60.798 ","60.633","0.6","0.6","0.6","0.6","0.6","0.6","0.6","0.6","0.6","0.6","0.6","0.6","0","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""},
//	{"glucose min. TD (TD = 62)","35.378999304","2058","0.587902344","62","12","95.968 ","92.148 ","76.009 ","75.812 ","74.187 ","72.814 ","71.536 ","71.490","69.697 ","69.653 ","60.798 ","60.633","0.6","0.6","0.6","0.6","0.6","0.6","0.6","0.6","0.6","0.6","0.6","0.6","0","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""},

	{"glucose},
// here starts pasted data
///	{"demo","155.17","14000","0.333","32","7","150.0","49.56","49.533","20.432","19.32","18.45","17","0.66",".6","0.6","0.6","0.6","0.6","0.6","0","10-9 ","9-8 ","8-7 ","8-5 ","4-3 ","3-2 ","2-1 0.5-0.1 "},
/*{"demo2","155.17","14000","0.333","32","7","150.0","49.56","49.533","20.432","19.32","18.45","17","0.66",".6","0.6","0.6","0.6","0.6","0.6","0","10-7 ","9-8 ","8-7 ","8-5 ","4-3 ","3-2 ","2-1 0.5-0.1 ","0"},
{"1131f2 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","21","129.156400","129.022600","126.819900","126.180900","124.600800","107.455600","106.428100","105.562000","105.123700","104.742700","102.151800","67.739900","56.158200","55.240600","48.970200","48.090600","21.368500","20.336500","20.021900","11.879800","11.103600","0.225000","0.435000","0.435000","0.380000","0.225000","0.380000","0.435000","0.435000","0.380000","0.380000","0.435000","0.590000","0.175000","0.175000","0.590000","0.435000","0.175000","0.330000","0.380000","0.175000","0.175000","0","93.000000-102.000000","127.000000-136.000000","152.000000-154.000000","188.000000-188.000000","93.000000-102.000000","127.000000-136.000000","152.000000-154.000000","188.000000-188.000000","120.000000-133.000000","120.000000-133.000000","152.000000-153.000000","122.000000-133.000000","149.000000-156.000000","165.000000-173.000000","194.000000-198.000000","166.000000-172.000000","184.000000-203.000000","168.000000-170.000000","183.000000-204.000000","214.000000-219.000000","183.000000-204.000000","213.000000-220.000000","184.000000-204.000000","213.000000-220.000000","184.000000-192.000000","505.000000-514.000000","524.000000-530.000000","587.000000-593.000000","524.000000-530.000000","587.000000-593.000000","534.000000-560.000000","532.000000-559.000000","716.000000-720.000000","782.000000-792.000000","716.000000-720.000000","778.000000-795.000000","801.000000-812.000000","717.000000-720.000000","777.000000-795.000000","801.000000-812.000000","874.000000-881.000000","887.000000-895.000000","873.000000-881.000000","887.000000-895.000000",""},
{"6bt3a01 27662.517578 256 1024 9379.767432 sw0","3000.0","300","1000.0","100","17","137.031400","116.285500","79.572200","77.219300","66.395200","64.126400","60.231300","40.143900","39.155100","37.127200","36.249700","36.037200","35.656300","27.417100","20.145400","14.355100","12.019100","0.735000","0.605000","3.135000","0.800000","1.120000","1.380000","1.705000","1.510000","2.095000","1.965000","1.900000","1.315000","0.605000","0.085000","0.020000","0.150000","0.085000","0","148.000000-157.000000","838.000000-839.000000","303.000000-312.000000","304.000000-315.000000","82.000000-96.000000","105.000000-108.000000","315.000000-316.000000","642.000000-650.000000","522.000000-533.000000","623.000000-632.000000","733.000000-741.000000","734.000000-742.000000","738.000000-739.000000","783.000000-795.000000","824.000000-831.000000","854.000000-863.000000","706.000000-717.000000","739.000000-739.000000","770.000000-770.000000","778.000000-796.000000","823.000000-832.000000","855.000000-867.000000","706.000000-717.000000","739.000000-739.000000","770.000000-770.000000","777.000000-796.000000","823.000000-832.000000","855.000000-867.000000","706.000000-717.000000","739.000000-739.000000","773.000000-797.000000","823.000000-837.000000","860.000000-868.000000","821.000000-829.000000","783.000000-788.000000","825.000000-827.000000","835.000000-841.000000","830.000000-835.000000",""},
{"AB-5-26A 27662.517578 256 1024 9379.767432 sw0","3000.0","300","1000.0","100","16","135.800300","130.394100","128.301900","117.450200","92.476100","78.600600","54.792800","49.004600","41.741400","41.117000","36.411700","29.634400","28.532900","28.339500","28.277000","26.063800","0.540000","0.860000","1.900000","0.540000","0.475000","0.475000","0.410000","3.845000","0.990000","0.670000","0.670000","0.860000","0.540000","1.640000","0.475000","0.540000","0","103.000000-108.000000","98.000000-103.000000","365.000000-370.000000","411.000000-415.000000","540.000000-551.000000","626.000000-630.000000","450.000000-454.000000","533.000000-537.000000","533.000000-537.000000","598.000000-603.000000","710.000000-712.000000","849.000000-850.000000","867.000000-877.000000","867.000000-878.000000","867.000000-878.000000","820.000000-827.000000",""},
{"ab538 27662.517578 256 1024 9379.767432 sw0","3000.0","300","1000.0","100","16","130.542900","128.307800","94.618900","73.041000","69.968700","55.094700","51.821900","50.349700","33.073700","31.879400","31.421000","27.196300","25.835000","23.249600","19.077900","18.413000","0.345000","1.575000","0.345000","0.215000","0.345000","0.215000","1.380000","0.280000","0.280000","0.735000","0.540000","0.085000","0.410000","0.410000","0.150000","0.215000","0","81.000000-87.000000","77.000000-85.000000","390.000000-395.000000","489.000000-499.000000","486.000000-493.000000","520.000000-526.000000","618.000000-624.000000","413.000000-420.000000","415.000000-416.000000","496.000000-500.000000","690.000000-690.000000","705.000000-713.000000","787.000000-794.000000","704.000000-715.000000","792.000000-793.000000","683.000000-691.000000","703.000000-722.000000","830.000000-833.000000","814.000000-819.000000","830.000000-832.000000","839.000000-847.000000","819.000000-829.000000","859.000000-860.000000","885.000000-899.000000","908.000000-910.000000","886.000000-899.000000","905.000000-912.000000",""},
{"ab-6-11 16604.400391 256 1024 5628.646151 sw0","3000.0","300","1000.0","100","15","129.985800","128.077900","94.334500","78.711700","54.913200","51.499500","49.738000","31.484300","31.273100","31.096600","28.275300","28.152600","26.964100","25.615400","23.215900","0.470000","1.750000","0.430000","0.470000","0.390000","0.855000","0.430000","0.625000","0.275000","0.510000","0.510000","0.470000","0.235000","0.470000","0.545000","0","128.000000-142.000000","119.000000-126.000000","398.000000-411.000000","512.000000-539.000000","494.000000-495.000000","589.000000-620.000000","435.000000-447.000000","500.000000-513.000000","639.000000-736.000000","788.000000-791.000000","634.000000-738.000000","787.000000-791.000000","631.000000-739.000000","787.000000-791.000000","797.000000-797.000000","805.000000-850.000000","800.000000-852.000000","738.000000-740.000000","798.000000-837.000000","684.000000-686.000000","777.000000-823.000000","792.000000-820.000000",""},
{"ab-6-13 16604.400391 256 1024 5628.646151 sw0","3000.0","300","1000.0","100","19","130.142300","129.881000","128.088100","113.743600","94.368100","78.743800","54.854600","50.471100","49.747500","35.992200","31.310300","30.984000","28.370500","28.273800","28.144100","26.978100","25.630600","23.118500","8.590900","0.160000","0.390000","1.595000","0.120000","0.275000","0.315000","0.275000","0.895000","0.275000","0.315000","0.585000","0.470000","0.390000","0.390000","0.390000","0.080000","0.355000","0.470000","0.235000","0","67.000000-72.000000","190.000000-197.000000","67.000000-72.000000","190.000000-197.000000","181.000000-187.000000","234.000000-239.000000","447.000000-454.000000","549.000000-568.000000","625.000000-627.000000","634.000000-647.000000","481.000000-486.000000","540.000000-544.000000","481.000000-486.000000","539.000000-545.000000","658.000000-670.000000","676.000000-689.000000","699.000000-723.000000","699.000000-723.000000","821.000000-855.000000","821.000000-855.000000","821.000000-855.000000","819.000000-854.000000","712.000000-713.000000","800.000000-829.000000","813.000000-820.000000","840.000000-849.000000",""},
{"ab-6-18a 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","13","130.011700","128.327300","94.895500","78.933700","70.589900","55.256300","54.055300","46.377800","33.135500","31.857200","28.652100","28.589800","26.647800","0.330000","1.520000","0.225000","0.225000","1.730000","0.175000","0.795000","0.330000","0.435000","0.275000","0.330000","0.275000","0.330000","0","61.000000-68.000000","62.000000-69.000000","381.000000-388.000000","503.000000-508.000000","518.000000-523.000000","429.000000-437.000000","619.000000-624.000000","282.000000-286.000000","619.000000-624.000000","510.000000-519.000000","653.000000-659.000000","693.000000-696.000000","653.000000-662.000000","694.000000-695.000000","707.000000-715.000000","825.000000-831.000000","847.000000-853.000000","825.000000-831.000000","847.000000-853.000000","796.000000-803.000000","826.000000-835.000000","849.000000-851.000000",""},
{"ab-6-18b 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","15","130.428600","128.301300","95.042300","78.942900","68.525500","55.318300","52.552600","48.133800","32.572400","32.054400","28.557700","28.457700","26.283700","18.080800","16.885800","0.485000","1.575000","0.225000","0.275000","0.435000","0.225000","0.330000","0.275000","0.330000","0.275000","0.380000","0.275000","0.275000","0.485000","0.950000","0","67.000000-73.000000","64.000000-70.000000","387.000000-393.000000","502.000000-506.000000","516.000000-521.000000","382.000000-388.000000","618.000000-618.000000","625.000000-630.000000","408.000000-412.000000","533.000000-539.000000","697.000000-703.000000","687.000000-687.000000","696.000000-715.000000","824.000000-830.000000","843.000000-849.000000","823.000000-830.000000","843.000000-849.000000","832.000000-834.000000","825.000000-830.000000","821.000000-830.000000",""},
{"AB-6-24 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","17","130.775500","128.705200","95.193400","93.980200","79.223100","55.417500","54.709500","49.385100","33.435500","32.022400","29.016400","28.936600","27.630900","26.923900","26.585000","24.320100","-4.375400","0.380000","1.625000","0.330000","0.485000","0.330000","0.225000","0.535000","0.435000","0.485000","0.485000","0.435000","0.435000","0.225000","0.330000","0.275000","0.435000","0.225000","0","62.000000-69.000000","64.000000-76.000000","346.000000-352.000000","338.000000-353.000000","376.000000-380.000000","463.000000-469.000000","475.000000-481.000000","339.000000-341.000000","548.000000-562.000000","338.000000-342.000000","546.000000-562.000000","451.000000-453.000000","462.000000-468.000000","592.000000-597.000000","619.000000-623.000000","591.000000-598.000000","609.000000-644.000000","751.000000-777.000000","798.000000-798.000000","751.000000-777.000000","798.000000-798.000000","712.000000-718.000000","744.000000-762.000000","768.000000-777.000000","711.000000-726.000000","742.000000-759.000000","769.000000-776.000000","795.000000-810.000000","711.000000-726.000000","741.000000-758.000000","770.000000-776.000000","795.000000-810.000000","732.000000-738.000000","746.000000-748.000000","754.000000-754.000000","795.000000-809.000000","880.000000-894.000000",""},
{"ab-6-38 16604.400391 256 1024 5628.646151 sw0","3000.0","300","1000.0","100","19","131.527200","128.354200","128.288200","105.162100","94.567900","78.991000","57.881700","55.192400","51.922300","49.658400","32.822700","31.671000","31.425800","31.257500","28.184300","28.120900","25.711500","23.462900","21.347100","1.030000","1.715000","1.510000","0.870000","0.305000","0.385000","0.830000","0.225000","0.585000","0.385000","1.030000","0.830000","0.145000","0.585000","0.425000","0.665000","0.425000","0.385000","1.470000","0","420.000000-424.000000","415.000000-418.000000","415.000000-418.000000","504.000000-507.000000","602.000000-606.000000","678.000000-689.000000","701.000000-704.000000","721.000000-722.000000","729.000000-740.000000","629.000000-632.000000","674.000000-678.000000","802.000000-809.000000","780.000000-796.000000","802.000000-808.000000","780.000000-796.000000","802.000000-808.000000","780.000000-796.000000","803.000000-808.000000","869.000000-880.000000","869.000000-881.000000","850.000000-869.000000","856.000000-863.000000","805.000000-805.000000","854.000000-860.000000",""},
{"AB-6-39 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","16","129.986000","128.323400","94.913200","78.597100","55.442300","55.071800","47.830500","40.246100","30.469000","29.098700","28.331600","28.284500","27.589600","27.412200","27.241200","25.793600","1.055000","1.990000","0.950000","1.005000","1.055000","1.005000","2.975000","1.105000","0.795000","1.315000","1.520000","1.470000","2.245000","1.005000","0.950000","1.005000","0","135.000000-143.000000","122.000000-128.000000","136.000000-141.000000","401.000000-409.000000","530.000000-548.000000","494.000000-498.000000","610.000000-615.000000","494.000000-498.000000","609.000000-615.000000","449.000000-462.000000","443.000000-458.000000","839.000000-841.000000","614.000000-622.000000","700.000000-707.000000","788.000000-791.000000","831.000000-843.000000","614.000000-623.000000","699.000000-707.000000","745.000000-748.000000","829.000000-844.000000","614.000000-623.000000","699.000000-707.000000","745.000000-748.000000","829.000000-844.000000","616.000000-620.000000","666.000000-674.000000","701.000000-706.000000","713.000000-722.000000","742.000000-748.000000","829.000000-844.000000","665.000000-674.000000","713.000000-722.000000","742.000000-749.000000","809.000000-809.000000","829.000000-844.000000","665.000000-674.000000","713.000000-722.000000","742.000000-749.000000","809.000000-809.000000","829.000000-844.000000","744.000000-748.000000","784.000000-795.000000","840.000000-840.000000",""},
{"ab-6-40a 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","31","130.078300","129.916200","128.321100","113.963700","94.731600","94.580100","78.988500","78.953800","55.149900","55.084300","50.669300","49.953900","49.274400","36.229700","31.529200","31.199500","31.132200","30.469800","28.616200","28.535500","28.514600","28.388700","27.241900","27.205200","25.902200","25.850400","24.007900","23.348300","21.024700","20.197600","8.833200","0.485000","0.640000","1.520000","0.120000","0.330000","0.330000","0.590000","0.330000","0.275000","0.225000","1.730000","0.275000","0.275000","0.380000","1.005000","0.690000","1.105000","0.120000","0.330000","0.330000","0.485000","0.485000","0.380000","0.070000","0.485000","0.380000","0.690000","0.590000","0.275000","0.225000","0.225000","0","79.000000-88.000000","78.000000-88.000000","69.000000-87.000000","131.000000-136.000000","381.000000-392.000000","381.000000-392.000000","504.000000-528.000000","504.000000-528.000000","596.000000-599.000000","612.000000-620.000000","596.000000-599.000000","612.000000-620.000000","415.000000-431.000000","494.000000-500.000000","415.000000-431.000000","480.000000-482.000000","493.000000-501.000000","417.000000-430.000000","478.000000-484.000000","493.000000-501.000000","637.000000-650.000000","658.000000-672.000000","857.000000-858.000000","682.000000-709.000000","846.000000-847.000000","681.000000-709.000000","845.000000-847.000000","681.000000-709.000000","845.000000-847.000000","680.000000-709.000000","795.000000-796.000000","844.000000-852.000000","834.000000-862.000000","834.000000-862.000000","830.000000-866.000000","830.000000-866.000000","785.000000-789.000000","828.000000-867.000000","873.000000-874.000000","785.000000-789.000000","828.000000-867.000000","873.000000-874.000000","786.000000-789.000000","807.000000-855.000000","863.000000-863.000000","807.000000-842.000000","851.000000-852.000000","815.000000-841.000000","820.000000-832.000000","839.000000-848.000000","896.000000-896.000000","825.000000-828.000000","856.000000-865.000000","856.000000-865.000000","853.000000-862.000000",""},
{"AB641 27662.517578 256 1024 9379.767432 sw0","3000.0","300","1000.0","100","18","132.631500","128.306400","126.956000","94.427700","78.592500","74.933300","54.807300","41.280300","32.316100","31.461300","30.433200","30.180800","30.108300","30.094600","29.808000","28.624200","28.521800","21.955100","0.215000","1.575000","0.215000","0.215000","0.280000","0.150000","0.215000","0.280000","0.280000","0.345000","0.280000","1.250000","0.280000","0.410000","0.215000","0.345000","0.280000","0.280000","0","70.000000-73.000000","225.000000-232.000000","286.000000-287.000000","21.000000-23.000000","61.000000-82.000000","119.000000-121.000000","67.000000-75.000000","113.000000-123.000000","228.000000-229.000000","281.000000-292.000000","398.000000-405.000000","523.000000-532.000000","458.000000-468.000000","631.000000-631.000000","645.000000-649.000000","577.000000-586.000000","833.000000-861.000000","834.000000-862.000000","662.000000-672.000000","740.000000-750.000000","811.000000-862.000000","662.000000-675.000000","740.000000-751.000000","811.000000-862.000000","662.000000-676.000000","739.000000-753.000000","811.000000-862.000000","662.000000-676.000000","739.000000-753.000000","811.000000-862.000000","662.000000-676.000000","739.000000-754.000000","811.000000-862.000000","663.000000-674.000000","745.000000-749.000000","815.000000-865.000000","666.000000-670.000000","816.000000-865.000000","813.000000-820.000000","833.000000-846.000000","892.000000-893.000000",""},
{"ab644a 27662.517578 256 1024 9379.767432 sw0","3000.0","300","1000.0","100","7","128.336000","94.959600","78.606000","55.084400","28.344700","28.304300","25.842400","1.640000","0.605000","0.540000","0.540000","0.670000","0.605000","0.605000","0","75.000000-98.000000","134.000000-137.000000","392.000000-405.000000","521.000000-525.000000","535.000000-545.000000","551.000000-557.000000","488.000000-491.000000","622.000000-635.000000","632.000000-636.000000","722.000000-731.000000","847.000000-885.000000","632.000000-636.000000","722.000000-731.000000","847.000000-885.000000","818.000000-831.000000","841.000000-848.000000",""},
{"ab644b 27662.517578 256 1024 9379.767432 sw0","3000.0","300","1000.0","100","23","130.607700","128.322600","95.808800","95.348100","78.610200","55.166700","55.094500","53.539500","48.538600","41.997000","40.573500","37.905100","29.836700","29.369100","28.378800","28.363200","28.291100","28.050800","27.253000","25.916000","25.835600","19.111200","18.856100","0.860000","1.575000","0.280000","0.280000","0.540000","0.280000","0.280000","0.540000","0.800000","0.860000","0.670000","0.410000","0.990000","0.800000","0.540000","0.605000","0.410000","1.640000","0.215000","0.410000","0.345000","0.280000","0.215000","0","81.000000-101.000000","75.000000-92.000000","386.000000-398.000000","386.000000-398.000000","549.000000-575.000000","473.000000-473.000000","636.000000-650.000000","473.000000-473.000000","636.000000-650.000000","471.000000-475.000000","615.000000-616.000000","637.000000-650.000000","428.000000-433.000000","445.000000-459.000000","475.000000-477.000000","509.000000-515.000000","454.000000-455.000000","472.000000-479.000000","510.000000-514.000000","642.000000-652.000000","915.000000-915.000000","922.000000-922.000000","656.000000-680.000000","735.000000-756.000000","874.000000-887.000000","903.000000-916.000000","656.000000-681.000000","736.000000-760.000000","874.000000-887.000000","894.000000-914.000000","657.000000-672.000000","708.000000-732.000000","740.000000-769.000000","875.000000-921.000000","657.000000-672.000000","708.000000-732.000000","740.000000-769.000000","875.000000-921.000000","657.000000-672.000000","708.000000-732.000000","740.000000-769.000000","875.000000-921.000000","658.000000-669.000000","707.000000-728.000000","741.000000-769.000000","875.000000-921.000000","708.000000-723.000000","753.000000-770.000000","870.000000-921.000000","841.000000-893.000000","903.000000-904.000000","841.000000-893.000000","903.000000-904.000000","897.000000-926.000000","897.000000-926.000000",""},
{"ab648 27662.517578 256 1024 9379.767432 sw0","3000.0","300","1000.0","100","4","94.042000","55.444700","26.300700","-4.764700","0.860000","1.510000","0.475000","0.540000","0","370.000000-380.000000","398.000000-403.000000","570.000000-580.000000","767.000000-771.000000","807.000000-822.000000","831.000000-831.000000","890.000000-914.000000",""},
{"AB-7-1 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","10","137.941300","131.226200","129.326400","128.322800","128.262400","118.581300","117.317900","115.135000","79.161300","28.477800","0.275000","0.225000","0.175000","0.175000","0.225000","0.225000","0.330000","0.275000","0.175000","0.225000","0","162.000000-168.000000","155.000000-167.000000","100.000000-110.000000","158.000000-170.000000","186.000000-196.000000","101.000000-111.000000","158.000000-195.000000","101.000000-111.000000","158.000000-195.000000","229.000000-236.000000","231.000000-234.000000","260.000000-267.000000","236.000000-244.000000","509.000000-514.000000","796.000000-815.000000",""},
{"ab-7-12 15094.339844 256 1024 5628.630912 sw0","3000.0","300","1000.0","100","9","131.163300","128.226800","128.193800","79.113800","47.339600","28.363200","27.799200","27.110700","25.416500","0.425000","0.625000","0.545000","0.425000","0.665000","0.425000","0.585000","0.545000","0.425000","0","130.000000-144.000000","73.000000-80.000000","136.000000-148.000000","73.000000-80.000000","136.000000-148.000000","536.000000-542.000000","516.000000-520.000000","664.000000-678.000000","700.000000-718.000000","864.000000-874.000000","664.000000-681.000000","700.000000-721.000000","865.000000-872.000000","668.000000-680.000000","709.000000-721.000000","788.000000-791.000000","782.000000-795.000000",""},
{"ab717a 27662.517578 256 1024 9379.767432 sw0","3000.0","300","1000.0","100","2","127.897000","25.384000","1.575000","0.345000","0","80.000000-86.000000","830.000000-844.000000",""},
{"ab721d 27662.517578 256 1024 9379.767432 sw0","3000.0","300","1000.0","100","12","129.753900","128.287400","104.682200","92.013100","82.954000","78.376200","55.798700","55.061500","28.671300","28.601100","26.042800","23.945800","0.735000","1.575000","0.345000","0.410000","0.410000","0.345000","0.345000","0.280000","0.410000","0.410000","0.280000","0.410000","0","96.000000-98.000000","112.000000-119.000000","94.000000-102.000000","244.000000-250.000000","428.000000-435.000000","423.000000-427.000000","475.000000-479.000000","554.000000-566.000000","564.000000-569.000000","652.000000-656.000000","564.000000-569.000000","651.000000-657.000000","865.000000-898.000000","866.000000-898.000000","890.000000-892.000000","900.000000-929.000000","849.000000-856.000000","903.000000-910.000000",""},
{"ab-729 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","17","137.204400","128.386000","128.305800","114.125000","94.787000","94.381100","79.371600","78.527500","76.983100","56.405400","55.213000","54.834000","39.936500","28.516400","28.291200","28.058400","27.159600","0.690000","0.795000","1.935000","0.690000","0.745000","0.795000","0.690000","0.690000","0.745000","0.745000","0.690000","0.640000","0.690000","0.745000","0.745000","0.745000","0.590000","0","295.000000-301.000000","197.000000-202.000000","216.000000-223.000000","197.000000-202.000000","216.000000-223.000000","358.000000-364.000000","377.000000-383.000000","294.000000-297.000000","396.000000-403.000000","293.000000-298.000000","395.000000-403.000000","495.000000-506.000000","494.000000-506.000000","438.000000-443.000000","495.000000-504.000000","555.000000-561.000000","545.000000-566.000000","543.000000-566.000000","423.000000-432.000000","704.000000-722.000000","704.000000-722.000000","650.000000-652.000000","704.000000-723.000000","648.000000-654.000000","705.000000-722.000000",""},
{"AB737D 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","19","130.501300","128.309600","94.502800","79.915500","79.018000","78.952500","60.020300","55.186700","55.142100","46.815800","38.992600","32.891400","31.888600","28.542700","28.443400","27.200800","26.607200","20.514000","14.189900","0.795000","1.520000","0.435000","0.900000","0.850000","0.330000","0.435000","0.590000","0.330000","0.485000","0.330000","1.210000","0.435000","0.535000","0.535000","0.020000","0.380000","0.175000","0.275000","0","74.000000-82.000000","68.000000-75.000000","378.000000-387.000000","273.000000-281.000000","491.000000-496.000000","506.000000-510.000000","273.000000-281.000000","490.000000-497.000000","504.000000-514.000000","273.000000-281.000000","490.000000-497.000000","504.000000-514.000000","482.000000-487.000000","589.000000-604.000000","589.000000-604.000000","508.000000-517.000000","660.000000-672.000000","614.000000-625.000000","669.000000-680.000000","612.000000-625.000000","668.000000-691.000000","799.000000-808.000000","820.000000-828.000000","799.000000-808.000000","819.000000-828.000000","769.000000-777.000000","792.000000-807.000000","820.000000-827.000000","767.000000-780.000000","791.000000-806.000000","821.000000-827.000000","764.000000-770.000000","858.000000-864.000000",""},
{"AB739 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","9","190.084900","142.737200","133.964400","117.978200","94.060400","56.110900","46.593500","31.130400","20.782900","0.330000","0.275000","0.225000","0.175000","0.175000","0.175000","0.120000","0.175000","0.225000","0","55.000000-68.000000","322.000000-329.000000","446.000000-459.000000","501.000000-512.000000","520.000000-521.000000","451.000000-451.000000","500.000000-523.000000","475.000000-483.000000","642.000000-648.000000","654.000000-657.000000","689.000000-699.000000","814.000000-822.000000","900.000000-910.000000",""},
{"ab743b 27662.517578 256 1024 9379.767432 sw0","3000.0","300","1000.0","100","11","190.364000","143.206400","130.972300","127.277300","93.033200","56.328600","55.723000","44.847300","42.813600","21.455900","21.261800","0.410000","0.280000","0.215000","0.150000","0.215000","0.150000","0.215000","0.215000","0.150000","0.280000","0.215000","0","50.000000-52.000000","58.000000-61.000000","72.000000-75.000000","81.000000-86.000000","327.000000-332.000000","444.000000-446.000000","456.000000-457.000000","470.000000-477.000000","343.000000-346.000000","441.000000-451.000000","471.000000-475.000000","481.000000-486.000000","503.000000-506.000000","645.000000-658.000000","645.000000-658.000000","696.000000-697.000000","744.000000-778.000000","691.000000-696.000000","759.000000-764.000000","771.000000-781.000000","829.000000-840.000000","903.000000-913.000000","759.000000-764.000000","771.000000-781.000000","829.000000-840.000000","903.000000-913.000000",""},
{"ab748b 27662.517578 256 1024 9379.767432 sw0","3000.0","300","1000.0","100","12","130.665300","94.089400","80.523700","78.746700","55.693600","45.992200","39.520500","32.874700","31.717900","28.360700","28.066700","26.055200","0.990000","0.345000","0.345000","0.345000","0.280000","0.410000","0.475000","1.055000","0.410000","0.410000","0.345000","0.410000","0","123.000000-131.000000","374.000000-381.000000","326.000000-336.000000","828.000000-829.000000","508.000000-518.000000","525.000000-535.000000","562.000000-569.000000","616.000000-622.000000","641.000000-651.000000","687.000000-688.000000","649.000000-666.000000","681.000000-704.000000","652.000000-671.000000","683.000000-707.000000","870.000000-894.000000","870.000000-894.000000","785.000000-797.000000","811.000000-826.000000","863.000000-867.000000","874.000000-878.000000",""},
{"AB-749 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","13","134.116000","117.197400","93.950400","78.729600","56.078500","55.495100","55.274500","53.531900","34.694900","28.323100","28.254100","19.821500","15.154500","0.275000","0.225000","0.330000","0.485000","0.380000","0.380000","0.275000","0.275000","0.225000","0.380000","0.330000","0.380000","0.330000","0","201.000000-216.000000","310.000000-311.000000","302.000000-327.000000","314.000000-323.000000","470.000000-493.000000","399.000000-410.000000","527.000000-534.000000","612.000000-622.000000","400.000000-410.000000","499.000000-501.000000","513.000000-513.000000","526.000000-534.000000","612.000000-622.000000","400.000000-410.000000","499.000000-502.000000","513.000000-513.000000","526.000000-534.000000","612.000000-622.000000","528.000000-544.000000","618.000000-618.000000","839.000000-841.000000","565.000000-581.000000","855.000000-877.000000","855.000000-877.000000","896.000000-903.000000","836.000000-844.000000",""},
{"ab822a 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","14","144.198900","136.552700","128.455200","114.128400","95.131600","78.535200","55.496500","53.730900","39.449600","30.205000","28.396800","28.117600","26.926700","18.427500","1.260000","1.160000","0.330000","1.990000","1.160000","3.230000","0.485000","0.330000","1.005000","0.070000","1.105000","0.850000","0.950000","0.175000","0","158.000000-166.000000","280.000000-288.000000","231.000000-239.000000","370.000000-383.000000","349.000000-354.000000","503.000000-515.000000","530.000000-536.000000","531.000000-534.000000","578.000000-583.000000","504.000000-513.000000","802.000000-819.000000","802.000000-820.000000","803.000000-815.000000","737.000000-744.000000",""},
{"ab822b 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","13","137.412600","135.707500","129.492600","116.803900","113.538400","91.775800","78.463800","55.018100","42.699700","40.819800","35.820400","28.349400","28.316800","0.380000","0.380000","1.520000","0.330000","0.380000","0.330000","0.380000","0.275000","0.275000","0.275000","0.380000","0.590000","0.485000","0","274.000000-291.000000","369.000000-382.000000","275.000000-296.000000","370.000000-380.000000","157.000000-169.000000","364.000000-383.000000","158.000000-160.000000","362.000000-385.000000","165.000000-165.000000","359.000000-375.000000","486.000000-511.000000","509.000000-518.000000","528.000000-545.000000","693.000000-715.000000","554.000000-575.000000","698.000000-704.000000","692.000000-726.000000","784.000000-786.000000","801.000000-828.000000","784.000000-786.000000","801.000000-828.000000",""},
{"AB-823A 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","11","135.612600","113.834000","96.855300","78.477500","55.171800","55.046600","40.333200","28.325600","28.181100","26.945600","19.467600","0.850000","1.005000","0.690000","2.505000","0.120000","0.380000","0.690000","0.795000","0.745000","0.070000","0.275000","0","280.000000-289.000000","381.000000-393.000000","350.000000-357.000000","523.000000-535.000000","539.000000-545.000000","556.000000-562.000000","539.000000-546.000000","555.000000-562.000000","438.000000-450.000000","873.000000-887.000000","862.000000-863.000000","873.000000-887.000000","861.000000-864.000000","874.000000-886.000000","748.000000-752.000000",""},
{"ab826 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","11","135.554100","113.804900","96.941500","78.507100","55.191800","55.066600","40.333600","28.313900","28.161200","25.923700","12.163600","1.160000","1.105000","0.850000","3.750000","0.225000","0.485000","0.850000","0.900000","0.795000","0.435000","0.330000","0","268.000000-282.000000","373.000000-375.000000","366.000000-379.000000","337.000000-344.000000","501.000000-515.000000","512.000000-524.000000","531.000000-539.000000","512.000000-524.000000","531.000000-540.000000","430.000000-443.000000","829.000000-849.000000","829.000000-849.000000","649.000000-673.000000","836.000000-846.000000","866.000000-875.000000",""},
{"af170 27173.912109 154 1024 10061.276900 sw0","3000.0","300","1000.0","100","20","132.369800","129.716100","129.551100","128.433200","128.381000","128.252300","127.837600","127.717100","127.651700","127.497100","127.031500","127.003200","125.640300","125.582300","78.684400","78.665300","70.566600","69.266500","64.125500","61.945500","1.365000","0.330000","0.175000","0.175000","0.435000","0.225000","0.330000","0.175000","0.795000","0.330000","0.690000","0.900000","0.275000","0.330000","0.485000","0.485000","0.275000","0.485000","0.590000","0.175000","0","101.000000-151.000000","95.000000-159.000000","95.000000-159.000000","94.000000-159.000000","94.000000-159.000000","94.000000-159.000000","94.000000-159.000000","94.000000-159.000000","94.000000-159.000000","94.000000-159.000000","94.000000-158.000000","94.000000-158.000000","95.000000-119.000000","125.000000-157.000000","95.000000-118.000000","126.000000-156.000000","316.000000-330.000000","316.000000-330.000000","586.000000-633.000000","589.000000-632.000000","532.000000-538.000000","553.000000-561.000000","585.000000-594.000000","604.000000-605.000000","532.000000-537.000000","554.000000-560.000000","584.000000-606.000000","615.000000-619.000000",""},
{"AF189 16666.666016 256 1024 7504.206791 sw0","3000.0","300","1000.0","100","12","128.298700","127.622900","127.508400","121.786400","120.778200","118.172100","114.414500","81.940200","64.009800","43.406000","41.496200","11.044100","0.225000","0.275000","0.175000","0.225000","0.175000","0.175000","0.380000","0.330000","0.225000","0.175000","0.225000","0.275000","0","119.000000-147.000000","117.000000-150.000000","117.000000-150.000000","195.000000-212.000000","186.000000-209.000000","183.000000-190.000000","205.000000-212.000000","394.000000-401.000000","636.000000-646.000000","929.000000-929.000000","620.000000-620.000000","678.000000-686.000000","737.000000-744.000000","923.000000-935.000000",""},
{"AF191 16666.666016 256 1024 7504.206791 sw0","3000.0","300","1000.0","100","12","128.186000","127.624400","127.578000","121.351100","120.620300","116.824000","112.288800","83.043400","63.718100","55.975700","41.294300","11.622000","0.175000","0.225000","0.120000","0.175000","0.120000","0.175000","0.225000","0.225000","0.175000","0.120000","0.175000","0.275000","0","76.000000-101.000000","75.000000-103.000000","75.000000-103.000000","151.000000-156.000000","169.000000-171.000000","151.000000-154.000000","168.000000-175.000000","165.000000-172.000000","149.000000-155.000000","376.000000-383.000000","633.000000-641.000000","546.000000-551.000000","734.000000-739.000000","948.000000-961.000000",""},
{"AF194 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","11","128.229300","127.870800","127.326900","77.846700","70.231900","67.004400","41.458400","30.855100","25.424100","24.843400","24.260200","0.070000","0.175000","0.175000","0.225000","0.175000","0.175000","0.175000","0.225000","0.275000","0.225000","0.175000","0","70.000000-92.000000","69.000000-93.000000","70.000000-93.000000","590.000000-601.000000","423.000000-440.000000","708.000000-717.000000","714.000000-734.000000","746.000000-758.000000","862.000000-872.000000","793.000000-802.000000","808.000000-816.000000","869.000000-884.000000","793.000000-817.000000","867.000000-888.000000","794.000000-818.000000","867.000000-889.000000",""},
{"AF196 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","8","128.232600","127.796800","127.694400","85.965500","63.531900","56.445900","40.553100","9.124800","0.275000","0.330000","0.330000","0.225000","0.225000","0.330000","0.225000","0.435000","0","123.000000-136.000000","124.000000-136.000000","124.000000-136.000000","519.000000-526.000000","646.000000-654.000000","620.000000-625.000000","710.000000-722.000000","921.000000-927.000000",""},
{"AF209 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","8","102.453600","66.877400","35.204900","31.701900","25.855000","23.653200","22.544800","13.986200","0.120000","0.175000","0.120000","0.070000","0.225000","0.120000","0.120000","0.175000","0","68.000000-79.000000","147.000000-159.000000","211.000000-227.000000","634.000000-649.000000","693.000000-705.000000","686.000000-696.000000","675.000000-687.000000","695.000000-701.000000","676.000000-702.000000","772.000000-781.000000",""},
{"AF215 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","12","128.381900","127.473600","126.579600","82.948000","67.557000","61.467100","38.270100","32.298400","31.742200","25.523300","22.556800","14.048800","0.225000","0.275000","0.175000","0.435000","1.730000","2.195000","0.275000","0.485000","0.175000","0.225000","0.120000","0.175000","0","50.000000-67.000000","248.000000-278.000000","178.000000-195.000000","689.000000-717.000000","740.000000-765.000000","697.000000-725.000000","840.000000-858.000000","697.000000-725.000000","839.000000-859.000000","805.000000-822.000000","846.000000-860.000000","838.000000-856.000000","958.000000-963.000000","845.000000-848.000000","947.000000-966.000000",""},
{"AF218 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","11","130.686900","128.449300","127.602600","127.558700","126.921300","126.167100","81.473400","67.897400","61.454900","32.459300","19.522600","0.175000","0.120000","0.330000","0.120000","0.275000","0.175000","0.175000","0.435000","0.485000","0.275000","0.120000","0","96.000000-104.000000","69.000000-89.000000","49.000000-54.000000","69.000000-94.000000","49.000000-54.000000","69.000000-94.000000","49.000000-55.000000","69.000000-74.000000","80.000000-94.000000","49.000000-54.000000","69.000000-73.000000","82.000000-93.000000","363.000000-367.000000","677.000000-686.000000","656.000000-664.000000","965.000000-975.000000","902.000000-905.000000",""},
{"AF223 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","13","128.401700","127.510500","126.588800","83.065900","68.128000","65.861800","62.197100","38.009800","32.120100","28.014500","22.598500","15.267200","13.985000","0.120000","0.225000","0.175000","0.120000","0.225000","0.330000","0.175000","0.175000","0.225000","0.120000","0.120000","0.175000","0.120000","0","73.000000-75.000000","85.000000-96.000000","106.000000-149.000000","199.000000-200.000000","73.000000-75.000000","84.000000-149.000000","72.000000-76.000000","84.000000-149.000000","497.000000-506.000000","513.000000-515.000000","583.000000-598.000000","487.000000-489.000000","582.000000-594.000000","861.000000-863.000000","548.000000-559.000000","780.000000-819.000000","553.000000-554.000000","779.000000-798.000000","788.000000-791.000000","808.000000-810.000000","834.000000-867.000000","841.000000-861.000000","899.000000-906.000000","586.000000-587.000000","856.000000-866.000000","899.000000-907.000000","847.000000-866.000000","895.000000-908.000000",""},
{"AF227 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","7","129.675600","128.270900","126.480000","102.728500","67.020900","42.014000","25.748300","0.120000","0.070000","0.120000","0.120000","0.120000","0.175000","0.275000","0","108.000000-121.000000","100.000000-125.000000","107.000000-124.000000","464.000000-473.000000","717.000000-718.000000","547.000000-558.000000","597.000000-618.000000","832.000000-832.000000","707.000000-727.000000","600.000000-605.000000","820.000000-840.000000","931.000000-944.000000",""},
{"AF230 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","14","128.395900","127.505000","126.582000","83.068800","68.169100","65.859400","62.255200","38.245900","32.110400","31.709500","25.506700","22.528100","15.263400","14.020600","0.175000","0.175000","0.120000","0.175000","0.225000","0.330000","0.175000","0.225000","0.275000","0.120000","0.120000","0.120000","0.225000","0.120000","0","136.000000-153.000000","137.000000-154.000000","138.000000-153.000000","553.000000-561.000000","646.000000-658.000000","645.000000-654.000000","609.000000-617.000000","865.000000-876.000000","889.000000-899.000000","864.000000-878.000000","938.000000-948.000000","864.000000-877.000000","937.000000-948.000000","921.000000-930.000000","940.000000-951.000000","935.000000-945.000000","994.000000-996.000000","945.000000-953.000000","990.000000-998.000000","939.000000-952.000000","988.000000-999.000000",""},
{"af231 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","5","133.195300","129.686500","128.417900","66.644400","61.262400","0.175000","0.120000","0.120000","0.225000","0.795000","0","109.000000-115.000000","44.000000-51.000000","128.000000-131.000000","45.000000-50.000000","125.000000-133.000000","520.000000-525.000000","586.000000-592.000000",""},
{"AF240 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","11","131.085500","128.998500","128.711000","128.687600","127.732400","72.525000","69.571100","66.030200","62.045500","15.444300","0.015800","1.730000","2.350000","0.275000","0.070000","0.070000","0.120000","0.120000","0.275000","0.175000","0.175000","0.120000","0","87.000000-92.000000","67.000000-71.000000","89.000000-92.000000","104.000000-118.000000","67.000000-71.000000","89.000000-93.000000","104.000000-120.000000","67.000000-71.000000","89.000000-93.000000","104.000000-120.000000","68.000000-69.000000","86.000000-94.000000","104.000000-122.000000","344.000000-347.000000","506.000000-510.000000","520.000000-525.000000","448.000000-453.000000","537.000000-544.000000","505.000000-510.000000","789.000000-796.000000","899.000000-909.000000","928.000000-928.000000",""},
{"AF242 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","8","131.825800","128.674700","128.627400","128.345500","127.585300","72.497600","69.561600","61.916500","0.070000","0.225000","0.120000","0.070000","0.120000","0.120000","0.120000","0.120000","0","130.000000-145.000000","151.000000-156.000000","72.000000-74.000000","107.000000-115.000000","121.000000-159.000000","72.000000-74.000000","107.000000-115.000000","121.000000-159.000000","72.000000-73.000000","108.000000-115.000000","121.000000-159.000000","108.000000-114.000000","121.000000-159.000000","350.000000-362.000000","527.000000-538.000000","544.000000-553.000000","522.000000-524.000000","530.000000-547.000000",""},
{"AF243 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","7","128.708100","128.684900","127.728800","72.522200","69.568300","62.042400","0.015000","0.330000","0.120000","0.070000","0.120000","0.120000","0.120000","0.070000","0","82.000000-88.000000","105.000000-110.000000","119.000000-131.000000","82.000000-88.000000","105.000000-110.000000","119.000000-131.000000","83.000000-87.000000","104.000000-111.000000","119.000000-131.000000","364.000000-369.000000","530.000000-536.000000","544.000000-552.000000","528.000000-535.000000","933.000000-939.000000","960.000000-960.000000",""},
{"AF256 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","19","147.514500","140.246100","133.437600","131.876400","129.779000","128.564300","121.923400","118.612100","114.894600","101.403200","74.252900","59.475300","55.612500","49.889100","49.310400","39.673000","27.728300","26.450600","23.774200","0.275000","0.275000","0.275000","0.330000","0.175000","0.175000","0.380000","0.590000","0.330000","0.380000","0.690000","0.275000","0.175000","0.435000","0.380000","0.275000","0.225000","0.435000","0.535000","0","68.000000-72.000000","338.000000-345.000000","182.000000-187.000000","196.000000-197.000000","139.000000-145.000000","129.000000-136.000000","195.000000-200.000000","130.000000-136.000000","193.000000-201.000000","203.000000-209.000000","199.000000-203.000000","432.000000-441.000000","190.000000-196.000000","267.000000-271.000000","600.000000-607.000000","546.000000-551.000000","646.000000-653.000000","660.000000-675.000000","645.000000-674.000000","715.000000-722.000000","760.000000-765.000000","790.000000-790.000000","761.000000-764.000000","787.000000-793.000000","746.000000-752.000000","784.000000-790.000000",""},
{"AF258 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","11","128.418500","127.529800","126.600400","83.088700","68.207000","62.299300","38.018300","32.108700","28.022300","22.610200","14.007100","0.120000","0.175000","0.175000","0.120000","0.275000","0.380000","0.225000","0.435000","0.175000","0.175000","0.175000","0","104.000000-122.000000","104.000000-124.000000","105.000000-124.000000","465.000000-479.000000","540.000000-558.000000","511.000000-523.000000","731.000000-771.000000","788.000000-794.000000","810.000000-812.000000","517.000000-518.000000","731.000000-753.000000","738.000000-742.000000","758.000000-762.000000","784.000000-818.000000","782.000000-814.000000","844.000000-851.000000","795.000000-801.000000","842.000000-852.000000","866.000000-866.000000",""},
{"AF259 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","19","147.514100","141.787500","133.477700","131.897900","129.675500","128.642300","121.914900","118.713800","114.567900","101.403100","74.584700","59.461400","56.785300","55.669500","42.612800","39.766900","27.944300","27.654400","24.251200","0.380000","1.260000","0.330000","0.330000","0.175000","0.175000","0.485000","0.850000","0.745000","0.380000","1.675000","0.330000","0.640000","0.435000","0.485000","0.640000","0.850000","0.275000","1.315000","0","68.000000-72.000000","183.000000-187.000000","139.000000-144.000000","130.000000-137.000000","195.000000-199.000000","131.000000-136.000000","194.000000-200.000000","204.000000-209.000000","199.000000-203.000000","441.000000-449.000000","189.000000-195.000000","269.000000-273.000000","595.000000-600.000000","548.000000-550.000000","638.000000-640.000000","680.000000-684.000000","547.000000-551.000000","758.000000-762.000000","772.000000-772.000000","758.000000-762.000000","772.000000-772.000000","792.000000-792.000000","755.000000-756.000000","777.000000-779.000000",""},
{"AF260 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","16","147.326500","141.809500","131.210900","121.439900","118.478400","114.394100","101.327200","71.676200","59.898100","56.939500","55.685200","43.201900","39.912500","27.861300","27.560200","21.441900","0.535000","0.330000","0.535000","0.535000","0.535000","0.485000","0.590000","0.795000","0.435000","0.745000","0.225000","0.745000","0.380000","0.435000","0.745000","0.850000","0","65.000000-73.000000","350.000000-359.000000","127.000000-134.000000","192.000000-199.000000","171.000000-176.000000","429.000000-441.000000","197.000000-205.000000","369.000000-375.000000","621.000000-629.000000","543.000000-546.000000","623.000000-631.000000","667.000000-674.000000","542.000000-547.000000","626.000000-627.000000","671.000000-671.000000","577.000000-587.000000","667.000000-674.000000","703.000000-713.000000","752.000000-765.000000","785.000000-792.000000","752.000000-766.000000","785.000000-792.000000","756.000000-762.000000","786.000000-793.000000",""},
{"AF261 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","10","128.457900","127.588600","126.653800","82.977000","69.834700","62.099400","37.960900","28.100700","22.660200","14.055100","0.070000","0.120000","0.070000","0.120000","0.120000","0.120000","0.175000","0.120000","0.120000","0.175000","0","92.000000-109.000000","93.000000-111.000000","95.000000-111.000000","472.000000-481.000000","540.000000-541.000000","568.000000-582.000000","535.000000-545.000000","757.000000-772.000000","781.000000-797.000000","816.000000-846.000000","824.000000-842.000000","879.000000-884.000000","878.000000-886.000000",""},
{"AF262 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","5","126.897000","125.412500","125.374700","102.818900","65.437900","0.070000","0.225000","0.225000","0.275000","0.070000","0","11.000000-11.000000","73.000000-91.000000","157.000000-157.000000","72.000000-87.000000","72.000000-87.000000","192.000000-192.000000","308.000000-308.000000","324.000000-343.000000","404.000000-405.000000","476.000000-476.000000","512.000000-513.000000","580.000000-600.000000",""},
{"AF263 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","5","132.099200","132.089400","129.305400","127.893200","65.632900","0.275000","0.330000","0.175000","0.070000","0.070000","0","66.000000-70.000000","90.000000-100.000000","107.000000-111.000000","66.000000-70.000000","90.000000-100.000000","107.000000-111.000000","65.000000-70.000000","85.000000-99.000000","105.000000-115.000000","58.000000-75.000000","82.000000-99.000000","106.000000-114.000000","480.000000-502.000000","511.000000-515.000000",""},
{"AF271 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","8","130.365900","128.607000","125.812200","125.807100","100.131400","67.458900","25.751600","18.775300","0.120000","0.175000","0.020000","-0.035000","0.120000","0.120000","0.225000","0.175000","0","196.000000-210.000000","193.000000-206.000000","146.000000-151.000000","194.000000-200.000000","146.000000-151.000000","194.000000-200.000000","399.000000-408.000000","571.000000-580.000000","607.000000-619.000000","831.000000-839.000000","934.000000-943.000000","810.000000-814.000000",""},
{"AF275 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","15","64.330300","64.230600","62.773500","62.676800","28.754700","28.390500","28.353600","28.270800","28.186900","27.522000","27.393500","24.142800","24.130900","24.068900","24.049800","0.175000","0.175000","0.120000","0.175000","0.850000","0.275000","0.225000","0.175000","0.175000","0.175000","0.175000","0.120000","0.120000","0.330000","0.330000","0","99.000000-124.000000","99.000000-124.000000","209.000000-235.000000","209.000000-235.000000","166.000000-191.000000","208.000000-244.000000","423.000000-444.000000","166.000000-193.000000","208.000000-244.000000","420.000000-446.000000","166.000000-193.000000","208.000000-244.000000","420.000000-446.000000","166.000000-193.000000","208.000000-244.000000","420.000000-446.000000","166.000000-193.000000","208.000000-243.000000","420.000000-448.000000","166.000000-192.000000","209.000000-241.000000","419.000000-448.000000","693.000000-697.000000","167.000000-191.000000","218.000000-238.000000","419.000000-447.000000","693.000000-697.000000","475.000000-504.000000","675.000000-704.000000","475.000000-504.000000","675.000000-704.000000","475.000000-504.000000","675.000000-704.000000","475.000000-504.000000","675.000000-704.000000",""},
{"AF276 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","8","133.354100","128.436000","127.966000","126.573400","118.012100","75.164700","40.762500","21.216500","0.175000","0.070000","0.120000","0.070000","0.175000","0.175000","0.225000","0.175000","0","308.000000-317.000000","121.000000-135.000000","121.000000-135.000000","123.000000-132.000000","379.000000-389.000000","296.000000-303.000000","655.000000-676.000000","724.000000-728.000000",""},
{"af324 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","5","130.458400","129.299700","127.922500","62.896100","20.516900","0.070000","0.070000","0.120000","0.070000","0.120000","0","88.000000-98.000000","87.000000-100.000000","85.000000-97.000000","211.000000-216.000000","692.000000-705.000000",""},
{"AF328 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","7","128.408500","127.846300","126.606000","77.391700","29.324800","21.308700","9.940500","0.120000","0.120000","0.070000","0.175000","0.175000","0.275000","0.225000","0","87.000000-103.000000","87.000000-104.000000","90.000000-102.000000","99.000000-103.000000","284.000000-293.000000","723.000000-745.000000","783.000000-787.000000","804.000000-807.000000","707.000000-714.000000","846.000000-854.000000",""},
{"AGditerleu 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","4","129.140000","127.156900","127.056400","25.680300","1.260000","4.320000","0.435000","0.225000","0","59.000000-62.000000","78.000000-88.000000","99.000000-125.000000","132.000000-132.000000","151.000000-163.000000","97.000000-134.000000","143.000000-146.000000","97.000000-134.000000","143.000000-146.000000","822.000000-832.000000","867.000000-895.000000",""},
{"ap530 27662.517578 256 1024 9379.767432 sw0","3000.0","300","1000.0","100","7","144.551000","110.414300","43.112500","42.428800","31.197400","20.486700","15.663800","0.280000","0.085000","0.150000","0.085000","0.150000","0.150000","0.150000","0","148.000000-153.000000","414.000000-426.000000","701.000000-725.000000","745.000000-758.000000","700.000000-724.000000","746.000000-758.000000","731.000000-746.000000","752.000000-768.000000","827.000000-839.000000","826.000000-834.000000",""},
{"ap531 27662.517578 256 1024 9379.767432 sw0","3000.0","300","1000.0","100","6","131.913600","115.281600","64.919700","30.756300","19.262700","13.741000","0.280000","0.540000","0.800000","0.215000","0.085000","0.215000","0","98.000000-104.000000","225.000000-234.000000","540.000000-546.000000","849.000000-859.000000","883.000000-891.000000","945.000000-951.000000",""},
{"ap532 27662.517578 256 1024 9379.767432 sw0","3000.0","300","1000.0","100","4","46.689100","41.292400","27.580300","27.569800","0.085000","0.150000","0.085000","-0.110000","0","838.000000-846.000000","715.000000-736.000000","754.000000-767.000000","838.000000-851.000000","900.000000-900.000000","910.000000-920.000000","754.000000-767.000000","838.000000-851.000000","900.000000-900.000000","910.000000-920.000000",""},
{"APRbenzoeth 27662.517578 256 1024 9379.767432 sw0","3000.0","300","1000.0","100","5","132.633000","129.375500","128.147100","60.760100","14.156000","0.150000","0.150000","0.150000","0.475000","0.215000","0","144.000000-148.000000","75.000000-80.000000","157.000000-163.000000","550.000000-555.000000","936.000000-941.000000",""},
{"AS51051 25157.232422 256 1024 7504.190807 sw0","3000.0","300","1000.0","100","5","191.303700","131.735000","122.396400","52.530200","21.645800","0.230000","0.140000","0.095000","0.280000","0.230000","0","58.000000-62.000000","242.000000-253.000000","302.000000-308.000000","545.000000-551.000000","800.000000-808.000000",""},
{"AS5311 16666.666016 256 1024 7504.190807 sw0","3000.0","300","1000.0","100","8","191.367400","131.569700","129.361400","128.019300","127.923500","122.635400","46.102400","18.845000","0.230000","0.140000","0.095000","0.095000","0.095000","0.095000","0.230000","0.280000","0","61.000000-64.000000","260.000000-271.000000","310.000000-320.000000","309.000000-324.000000","309.000000-324.000000","331.000000-338.000000","643.000000-648.000000","871.000000-881.000000",""},
{"AS5451 26160.888672 256 1024 12073.527480 sw0","3000.0","300","1000.0","100","8","131.842800","131.217100","122.380600","121.776600","41.178200","26.726800","16.477300","11.593900","0.200000","0.150000","0.100000","0.200000","0.200000","0.750000","0.700000","0.400000","0","243.000000-248.000000","266.000000-269.000000","243.000000-248.000000","266.000000-269.000000","330.000000-341.000000","331.000000-341.000000","779.000000-785.000000","858.000000-864.000000","877.000000-883.000000","911.000000-916.000000","937.000000-943.000000",""},
{"AS5931 16666.666016 256 1024 7504.190807 sw0","3000.0","300","1000.0","100","7","191.435900","130.755900","128.311800","127.672700","122.102500","52.533400","21.679900","0.280000","0.095000","0.185000","0.140000","0.140000","0.325000","0.280000","0","60.000000-63.000000","277.000000-285.000000","259.000000-267.000000","296.000000-299.000000","260.000000-266.000000","294.000000-301.000000","272.000000-277.000000","546.000000-551.000000","800.000000-809.000000",""},
{"as61032 27662.517578 256 1024 9379.767432 sw0","3000.0","300","1000.0","100","6","111.528200","64.105500","64.061600","38.012900","37.952200","21.793700","0.475000","1.120000","1.055000","1.120000","1.120000","0.800000","0","21.000000-36.000000","232.000000-250.000000","232.000000-250.000000","678.000000-693.000000","678.000000-693.000000","844.000000-861.000000",""},
{"ash 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","7","136.146300","124.055200","123.890500","61.980200","59.528100","27.653700","25.434000","1.210000","1.260000","1.260000","0.225000","1.105000","0.950000","0.120000","0","445.000000-456.000000","473.000000-474.000000","448.000000-459.000000","466.000000-471.000000","448.000000-459.000000","465.000000-471.000000","736.000000-741.000000","686.000000-694.000000","894.000000-915.000000","921.000000-924.000000","910.000000-919.000000",""},
{"ASH2 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","32","130.138700","129.927800","127.849700","127.572600","127.400000","66.462800","65.094000","64.574700","59.402100","39.982200","29.935100","29.488000","28.693000","27.861400","27.823200","27.725000","27.662800","27.522600","27.271200","27.212800","26.701800","26.436600","26.402100","26.270400","21.038500","20.053900","19.164900","19.003700","18.973300","13.194800","12.705300","0.015100","0.435000","0.795000","0.850000","0.175000","0.070000","0.330000","0.380000","0.330000","0.275000","0.120000","0.330000","0.275000","0.745000","0.795000","-0.035000","0.640000","2.090000","11.420000","0.380000","0.745000","0.275000","0.225000","0.175000","0.225000","0.120000","0.120000","0.900000","0.950000","0.380000","0.330000","0.380000","0.275000","0","725.000000-737.000000","792.000000-795.000000","716.000000-738.000000","792.000000-796.000000","708.000000-738.000000","793.000000-795.000000","707.000000-737.000000","707.000000-737.000000","708.000000-737.000000","708.000000-737.000000","708.000000-737.000000","708.000000-737.000000","708.000000-737.000000","714.000000-736.000000","715.000000-736.000000","716.000000-735.000000","716.000000-735.000000","688.000000-688.000000","705.000000-706.000000","676.000000-692.000000","705.000000-706.000000","676.000000-692.000000","677.000000-677.000000","686.000000-691.000000","677.000000-677.000000","686.000000-691.000000","824.000000-836.000000","825.000000-834.000000",""},
{"ash3sty 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","11","132.486800","131.687500","131.654500","131.061000","130.998100","127.193000","43.506300","28.450800","28.072800","27.692000","23.147600","0.120000","0.590000","0.225000","0.120000","0.070000","0.070000","0.175000","0.850000","0.175000","0.225000","0.275000","0","259.000000-266.000000","276.000000-309.000000","257.000000-266.000000","272.000000-310.000000","257.000000-266.000000","272.000000-310.000000","257.000000-265.000000","276.000000-312.000000","257.000000-265.000000","276.000000-312.000000","303.000000-313.000000","634.000000-643.000000","764.000000-788.000000","804.000000-810.000000","823.000000-824.000000","764.000000-788.000000","804.000000-810.000000","824.000000-824.000000","764.000000-787.000000","804.000000-809.000000","703.000000-714.000000",""},
{"ash4 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","10","148.122000","131.194700","130.063300","129.935400","129.736700","128.980200","128.552100","124.313100","60.685400","28.131000","0.225000","0.225000","0.275000","0.380000","0.225000","0.175000","0.330000","0.435000","0.590000","0.435000","0","115.000000-121.000000","238.000000-261.000000","236.000000-263.000000","236.000000-263.000000","236.000000-264.000000","236.000000-267.000000","236.000000-267.000000","255.000000-262.000000","554.000000-558.000000","934.000000-942.000000",""},
{"ashala 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","8","129.933900","129.416300","128.848400","128.567800","128.313400","126.600000","53.357500","34.008100","0.745000","0.380000","0.485000","0.435000","0.485000","0.640000","0.690000","0.950000","0","575.000000-600.000000","575.000000-600.000000","576.000000-601.000000","576.000000-601.000000","577.000000-601.000000","592.000000-602.000000","760.000000-767.000000","883.000000-904.000000",""},
{"ashleuc 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","7","129.633800","129.601100","129.529400","129.381100","128.710100","128.421400","28.535400","0.590000","0.850000","0.485000","0.275000","0.225000","0.485000","0.795000","0","190.000000-208.000000","254.000000-260.000000","190.000000-208.000000","254.000000-260.000000","191.000000-208.000000","254.000000-260.000000","191.000000-208.000000","254.000000-260.000000","191.000000-208.000000","248.000000-249.000000","255.000000-259.000000","191.000000-208.000000","246.000000-258.000000","907.000000-924.000000","930.000000-931.000000",""},
{"ashtrans 27662.517578 256 1024 9379.767432 sw0","3000.0","300","1000.0","100","9","66.117800","28.673700","28.660300","28.216800","28.158200","27.545500","27.191700","20.547000","19.918300","0.540000","0.735000","0.800000","0.345000","1.380000","0.215000","0.280000","0.280000","0.280000","0","306.000000-320.000000","496.000000-500.000000","509.000000-510.000000","753.000000-806.000000","848.000000-858.000000","753.000000-806.000000","848.000000-858.000000","1.000000-1.000000","751.000000-804.000000","853.000000-857.000000","1.000000-1.000000","751.000000-804.000000","854.000000-857.000000","892.000000-892.000000","1.000000-3.000000","751.000000-804.000000","892.000000-892.000000","704.000000-709.000000","732.000000-733.000000","752.000000-804.000000","728.000000-799.000000","806.000000-857.000000","711.000000-711.000000","727.000000-797.000000","813.000000-850.000000","905.000000-905.000000",""},
{"aurlm11a 27662.517578 256 1024 9379.767432 sw0","3000.0","300","1000.0","100","5","110.238700","107.662300","59.181100","56.410700","56.334000","0.280000","0.280000","0.215000","0.215000","0.150000","0","163.000000-168.000000","73.000000-89.000000","395.000000-404.000000","540.000000-544.000000","561.000000-571.000000","540.000000-544.000000","561.000000-571.000000",""},
{"aw129 27173.912109 256 1024 10061.276900 sw0","3000.0","300","1000.0","100","11","121.586300","110.645800","64.212200","56.999400","56.136400","56.062900","49.777100","46.945200","28.066200","24.217700","21.385100","0.380000","1.420000","1.260000","2.245000","0.380000","1.885000","1.520000","3.385000","2.195000","2.145000","2.195000","0","88.000000-93.000000","127.000000-132.000000","423.000000-431.000000","511.000000-520.000000","579.000000-588.000000","511.000000-523.000000","579.000000-587.000000","511.000000-523.000000","579.000000-587.000000","628.000000-637.000000","682.000000-691.000000","658.000000-674.000000","697.000000-711.000000","804.000000-823.000000","844.000000-845.000000","771.000000-779.000000","821.000000-827.000000","792.000000-798.000000","837.000000-845.000000",""},
{"ba266a 27662.517578 256 1024 9379.767432 sw0","3000.0","300","1000.0","100","14","135.039000","134.287200","131.479500","131.224900","128.859700","128.616900","128.576300","84.351100","84.037900","79.451200","76.384900","71.820000","71.664200","61.321900","0.215000","0.280000","0.150000","0.280000","0.670000","0.280000","0.410000","0.280000","0.345000","0.280000","0.280000","0.215000","0.215000","0.475000","0","153.000000-155.000000","278.000000-282.000000","299.000000-305.000000","153.000000-154.000000","277.000000-282.000000","296.000000-304.000000","149.000000-156.000000","293.000000-303.000000","150.000000-156.000000","293.000000-303.000000","142.000000-164.000000","171.000000-172.000000","143.000000-165.000000","171.000000-172.000000","143.000000-165.000000","171.000000-172.000000","431.000000-448.000000","431.000000-450.000000","347.000000-353.000000","421.000000-423.000000","437.000000-442.000000","436.000000-458.000000","437.000000-459.000000","532.000000-542.000000","556.000000-556.000000",""},


{"ba3482a 27662.517578 256 1024 9379.767432 sw0","3000.0","300","1000.0","100","32","136.675400","134.708100","134.598400","132.488100","132.157200","130.696800","79.266900","77.493700","77.217800","75.368200","62.525300","61.418100","61.209100","61.096600","50.732500","48.449200","48.289500","47.813000","45.502600","44.196300","30.581900","30.521400","30.425300","30.402200","28.858400","27.457900","25.601700","22.301200","20.971200","20.923800","20.893000","14.635900","0.280000","1.900000","0.990000","2.680000","1.640000","1.445000","2.550000","2.030000","1.055000","3.005000","1.315000","0.540000","0.410000","0.735000","0.345000","0.735000","0.800000","2.160000","0.540000","1.120000","0.215000","0.540000","0.540000","0.475000","1.575000","2.290000","1.185000","2.745000","0.605000","0.605000","0.605000","0.215000","0","290.000000-293.000000","314.000000-317.000000","315.000000-334.000000","343.000000-349.000000","315.000000-334.000000","343.000000-349.000000","336.000000-351.000000","326.000000-326.000000","336.000000-351.000000","303.000000-308.000000","322.000000-332.000000","343.000000-346.000000","423.000000-429.000000","153.000000-156.000000","454.000000-459.000000","151.000000-156.000000","454.000000-459.000000","322.000000-328.000000","589.000000-598.000000","542.000000-555.000000","586.000000-592.000000","527.000000-556.000000","527.000000-556.000000","527.000000-556.000000","463.000000-466.000000","443.000000-457.000000","489.000000-490.000000","503.000000-509.000000","620.000000-630.000000","642.000000-652.000000","443.000000-457.000000","489.000000-491.000000","503.000000-509.000000","620.000000-652.000000","443.000000-457.000000","489.000000-490.000000","503.000000-509.000000","620.000000-653.000000","555.000000-557.000000","653.000000-668.000000","759.000000-779.000000","758.000000-779.000000","908.000000-908.000000","758.000000-779.000000","908.000000-908.000000","758.000000-779.000000","908.000000-908.000000","761.000000-778.000000","809.000000-827.000000","906.000000-909.000000","802.000000-825.000000","762.000000-774.000000","782.000000-801.000000","782.000000-811.000000","782.000000-811.000000","782.000000-811.000000","728.000000-733.000000",""},
{"ba3483a 20833.333984 170 1024 9379.750701 sw0","3000.0","300","1000.0","100","20","134.952300","134.799700","131.953200","131.907500","78.199300","76.853400","75.530600","73.686100","59.632400","59.248700","53.413000","48.361700","48.316900","48.130800","31.949800","31.527800","30.488800","30.473000","22.452000","22.292000","0.415000","0.475000","0.530000","0.590000","0.530000","2.535000","1.335000","1.445000","0.590000","0.475000","0.475000","1.160000","0.415000","1.905000","0.705000","0.760000","0.415000","0.300000","0.530000","0.300000","0","71.000000-99.000000","116.000000-123.000000","71.000000-98.000000","116.000000-123.000000","76.000000-88.000000","111.000000-127.000000","76.000000-88.000000","111.000000-127.000000","227.000000-244.000000","282.000000-300.000000","232.000000-241.000000","282.000000-304.000000","527.000000-537.000000","284.000000-289.000000","426.000000-439.000000","526.000000-550.000000","288.000000-289.000000","364.000000-370.000000","423.000000-443.000000","528.000000-574.000000","528.000000-546.000000","553.000000-573.000000","200.000000-206.000000","277.000000-290.000000","360.000000-380.000000","431.000000-435.000000","553.000000-573.000000","603.000000-622.000000","277.000000-290.000000","360.000000-380.000000","431.000000-435.000000","553.000000-573.000000","603.000000-622.000000","277.000000-289.000000","360.000000-379.000000","431.000000-435.000000","554.000000-572.000000","603.000000-621.000000","537.000000-539.000000","561.000000-564.000000","606.000000-607.000000","811.000000-832.000000","896.000000-955.000000","561.000000-564.000000","803.000000-840.000000","899.000000-955.000000","798.000000-841.000000","913.000000-947.000000","798.000000-841.000000","913.000000-947.000000","823.000000-879.000000","823.000000-831.000000","841.000000-879.000000",""},
*/
//{"cyclo del","35.378999304","2058","1.179347224","70","5","130.342100","126.377800","74.700300","59.323300","59.049300","0.410000","0.280000","0.670000","0.925000","1.705000"," 60.798 ","356.000000-364.000000 ","358.000000-365.000000 ","529.000000-539.000000 ","343.000000-348.000000 390.000000-394.000000 ","343.000000-347.000000 389.000000-395.000000 ","0","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""},
{"cyclo & full-width HSQC","35.378999304","2058","1.179347224","70","53","130.342100","126.377800","74.700300","59.323300","59.049300","58.261300","57.849400","55.637300","55.582800","49.896900","49.004400","48.915400","48.467900","45.345700","41.231200","39.451300","39.264000","37.721100","36.319800","36.053700","35.730300","34.029300","31.676000","31.475200","31.319100","31.042700","30.192700","29.946800","29.526900","29.396400","25.625300","25.365000","25.182000","25.040900","24.930900","24.905800","24.308200","24.149400","23.838100","23.664400","23.635400","22.142000","22.058500","21.357300","20.297300","20.070300","18.890600","18.531100","18.131300","18.100700","17.409100","16.098400","10.121100","0.410000","0.280000","0.670000","0.925000","1.705000","0.800000","0.670000","1.965000","0.800000","1.055000","0.670000","0.540000","0.670000","0.540000","0.800000","0.925000","0.410000","0.925000","0.925000","0.800000","0.925000","0.540000","0.410000","0.540000","0.925000","0.670000","0.280000","0.280000","0.280000","0.670000","0.410000","0.670000","0.410000","1.445000","0.540000","0.540000","0.410000","0.410000","0.540000","0.670000","0.540000","0.410000","0.410000","0.280000","0.410000","0.410000","0.670000","0.540000","0.410000","0.540000","0.410000","0.540000","0.280000","0","356.000000-364.000000 ","358.000000-365.000000 ","529.000000-539.000000 ","343.000000-348.000000 390.000000-394.000000 ","343.000000-347.000000 389.000000-395.000000 ","343.000000-347.000000 388.000000-396.000000 ","345.000000-345.000000 388.000000-395.000000 ","361.000000-367.000000 393.000000-398.000000 442.000000-449.000000 ","361.000000-367.000000 392.000000-398.000000 442.000000-449.000000 ","408.000000-411.000000 454.000000-457.000000 505.000000-512.000000 704.000000-711.000000 ","323.000000-328.000000 406.000000-413.000000 452.000000-459.000000 506.000000-508.000000 706.000000-709.000000 ","323.000000-328.000000 406.000000-413.000000 452.000000-459.000000 506.000000-508.000000 706.000000-709.000000 ","322.000000-329.000000 406.000000-413.000000 452.000000-459.000000 ","435.000000-442.000000 ","631.000000-633.000000 734.000000-741.000000 850.000000-856.000000 ","630.000000-634.000000 749.000000-754.000000 852.000000-859.000000 ","630.000000-634.000000 748.000000-755.000000 852.000000-859.000000 ","630.000000-633.000000 745.000000-753.000000 833.000000-839.000000 ","632.000000-632.000000 701.000000-706.000000 748.000000-756.000000 776.000000-788.000000 815.000000-822.000000 ","701.000000-707.000000 749.000000-756.000000 776.000000-788.000000 815.000000-822.000000 ","701.000000-707.000000 749.000000-756.000000 776.000000-788.000000 815.000000-822.000000 ","571.000000-578.000000 ","618.000000-627.000000 669.000000-686.000000 703.000000-709.000000 ","618.000000-627.000000 668.000000-687.000000 702.000000-710.000000 ","618.000000-627.000000 668.000000-687.000000 702.000000-710.000000 ","618.000000-627.000000 652.000000-656.000000 667.000000-687.000000 702.000000-710.000000 ","619.000000-626.000000 650.000000-658.000000 666.000000-687.000000 742.000000-746.000000 ","619.000000-626.000000 650.000000-658.000000 666.000000-687.000000 741.000000-747.000000 ","650.000000-658.000000 666.000000-686.000000 740.000000-748.000000 ","650.000000-658.000000 666.000000-686.000000 740.000000-748.000000 ","771.000000-777.000000 798.000000-805.000000 837.000000-841.000000 871.000000-876.000000 894.000000-895.000000 ","770.000000-778.000000 796.000000-814.000000 835.000000-843.000000 851.000000-856.000000 880.000000-882.000000 891.000000-895.000000 ","770.000000-778.000000 796.000000-814.000000 835.000000-843.000000 851.000000-856.000000 880.000000-882.000000 891.000000-895.000000 ","770.000000-778.000000 796.000000-814.000000 834.000000-843.000000 849.000000-857.000000 872.000000-883.000000 891.000000-898.000000 ","770.000000-778.000000 796.000000-814.000000 834.000000-843.000000 849.000000-857.000000 872.000000-883.000000 891.000000-898.000000 ","770.000000-778.000000 796.000000-815.000000 834.000000-843.000000 849.000000-858.000000 871.000000-884.000000 891.000000-899.000000 ","771.000000-776.000000 797.000000-814.000000 834.000000-858.000000 870.000000-884.000000 890.000000-900.000000 ","773.000000-773.000000 797.000000-814.000000 835.000000-842.000000 849.000000-858.000000 870.000000-900.000000 ","799.000000-813.000000 835.000000-842.000000 849.000000-858.000000 870.000000-901.000000 ","808.000000-812.000000 837.000000-841.000000 850.000000-858.000000 870.000000-901.000000 ","808.000000-812.000000 837.000000-841.000000 850.000000-858.000000 870.000000-901.000000 ","872.000000-882.000000 888.000000-902.000000 ","873.000000-878.000000 888.000000-902.000000 ","872.000000-876.000000 886.000000-901.000000 912.000000-916.000000 ","806.000000-807.000000 871.000000-876.000000 885.000000-899.000000 911.000000-917.000000 ","805.000000-807.000000 869.000000-876.000000 890.000000-899.000000 911.000000-917.000000 ","871.000000-876.000000 883.000000-900.000000 912.000000-915.000000 ","804.000000-808.000000 868.000000-875.000000 883.000000-889.000000 895.000000-901.000000 ","804.000000-808.000000 867.000000-874.000000 883.000000-902.000000 ","804.000000-808.000000 867.000000-873.000000 883.000000-902.000000 ","804.000000-809.000000 823.000000-826.000000 867.000000-873.000000 884.000000-900.000000 ","805.000000-808.000000 822.000000-827.000000 868.000000-873.000000 885.000000-899.000000 ","898.000000-905.000000 ","0"},
{"cyclo & 14",			   "35.378999304","2058","1.179347224","70","53","130.342100","126.377800","74.700300","59.323300","59.049300","58.261300","57.849400","55.637300","55.582800","49.896900","49.004400","48.915400","48.467900","45.345700","41.231200","39.451300","39.264000","37.721100","36.319800","36.053700","35.730300","34.029300","31.676000","31.475200","31.319100","31.042700","30.192700","29.946800","29.526900","29.396400","25.625300","25.365000","25.182000","25.040900","24.930900","24.905800","24.308200","24.149400","23.838100","23.664400","23.635400","22.142000","22.058500","21.357300","20.297300","20.070300","18.890600","18.531100","18.131300","18.100700","17.409100","16.098400","10.121100","0.410000","0.280000","0.670000","0.925000","1.705000","0.800000","0.670000","1.965000","0.800000","1.055000","0.670000","0.540000","0.670000","0.540000","0.800000","0.925000","0.410000","0.925000","0.925000","0.800000","0.925000","0.540000","0.410000","0.540000","0.925000","0.670000","0.280000","0.280000","0.280000","0.670000","0.410000","0.670000","0.410000","1.445000","0.540000","0.540000","0.410000","0.410000","0.540000","0.670000","0.540000","0.410000","0.410000","0.280000","0.410000","0.410000","0.670000","0.540000","0.410000","0.540000","0.410000","0.540000","0.280000","0","390.000000-396.000000 ","356.000000-364.000000 ","358.000000-365.000000 ","529.000000-539.000000 ","343.000000-348.000000 390.000000-394.000000 ","343.000000-347.000000 389.000000-395.000000 ","343.000000-347.000000 388.000000-396.000000 ","345.000000-345.000000 388.000000-395.000000 ","361.000000-367.000000 393.000000-398.000000 442.000000-449.000000 ","361.000000-367.000000 392.000000-398.000000 442.000000-449.000000 ","408.000000-411.000000 454.000000-457.000000 505.000000-512.000000 704.000000-711.000000 ","323.000000-328.000000 406.000000-413.000000 452.000000-459.000000 506.000000-508.000000 706.000000-709.000000 ","323.000000-328.000000 406.000000-413.000000 452.000000-459.000000 506.000000-508.000000 706.000000-709.000000 ","322.000000-329.000000 406.000000-413.000000 452.000000-459.000000 ","435.000000-442.000000 ","631.000000-633.000000 734.000000-741.000000 850.000000-856.000000 ","630.000000-634.000000 749.000000-754.000000 852.000000-859.000000 ","630.000000-634.000000 748.000000-755.000000 852.000000-859.000000 ","630.000000-633.000000 745.000000-753.000000 833.000000-839.000000 ","632.000000-632.000000 701.000000-706.000000 748.000000-756.000000 776.000000-788.000000 815.000000-822.000000 ","701.000000-707.000000 749.000000-756.000000 776.000000-788.000000 815.000000-822.000000 ","701.000000-707.000000 749.000000-756.000000 776.000000-788.000000 815.000000-822.000000 ","571.000000-578.000000 ","618.000000-627.000000 669.000000-686.000000 703.000000-709.000000 ","618.000000-627.000000 668.000000-687.000000 702.000000-710.000000 ","618.000000-627.000000 668.000000-687.000000 702.000000-710.000000 ","618.000000-627.000000 652.000000-656.000000 667.000000-687.000000 702.000000-710.000000 ","619.000000-626.000000 650.000000-658.000000 666.000000-687.000000 742.000000-746.000000 ","619.000000-626.000000 650.000000-658.000000 666.000000-687.000000 741.000000-747.000000 ","650.000000-658.000000 666.000000-686.000000 740.000000-748.000000 ","650.000000-658.000000 666.000000-686.000000 740.000000-748.000000 ","771.000000-777.000000 798.000000-805.000000 837.000000-841.000000 871.000000-876.000000 894.000000-895.000000 ","770.000000-778.000000 796.000000-814.000000 835.000000-843.000000 851.000000-856.000000 880.000000-882.000000 891.000000-895.000000 ","770.000000-778.000000 796.000000-814.000000 835.000000-843.000000 851.000000-856.000000 880.000000-882.000000 891.000000-895.000000 ","770.000000-778.000000 796.000000-814.000000 834.000000-843.000000 849.000000-857.000000 872.000000-883.000000 891.000000-898.000000 ","770.000000-778.000000 796.000000-814.000000 834.000000-843.000000 849.000000-857.000000 872.000000-883.000000 891.000000-898.000000 ","770.000000-778.000000 796.000000-815.000000 834.000000-843.000000 849.000000-858.000000 871.000000-884.000000 891.000000-899.000000 ","771.000000-776.000000 797.000000-814.000000 834.000000-858.000000 870.000000-884.000000 890.000000-900.000000 ","773.000000-773.000000 797.000000-814.000000 835.000000-842.000000 849.000000-858.000000 870.000000-900.000000 ","799.000000-813.000000 835.000000-842.000000 849.000000-858.000000 870.000000-901.000000 ","808.000000-812.000000 837.000000-841.000000 850.000000-858.000000 870.000000-901.000000 ","808.000000-812.000000 837.000000-841.000000 850.000000-858.000000 870.000000-901.000000 ","872.000000-882.000000 888.000000-902.000000 ","873.000000-878.000000 888.000000-902.000000 ","872.000000-876.000000 886.000000-901.000000 912.000000-916.000000 ","806.000000-807.000000 871.000000-876.000000 885.000000-899.000000 911.000000-917.000000 ","805.000000-807.000000 869.000000-876.000000 890.000000-899.000000 911.000000-917.000000 ","871.000000-876.000000 883.000000-900.000000 912.000000-915.000000 ","804.000000-808.000000 868.000000-875.000000 883.000000-889.000000 895.000000-901.000000 ","804.000000-808.000000 867.000000-874.000000 883.000000-902.000000 ","804.000000-808.000000 867.000000-873.000000 883.000000-902.000000 ","804.000000-809.000000 823.000000-826.000000 867.000000-873.000000 884.000000-900.000000 ","805.000000-808.000000 822.000000-827.000000 868.000000-873.000000 885.000000-899.000000 ","898.000000-905.000000 ","0"},
{"cyclo & 114",            "35.378999304","2058","1.179347224","70","53","130.342100","126.377800","74.700300","59.323300","59.049300","58.261300","57.849400","55.637300","55.582800","49.896900","49.004400","48.915400","48.467900","45.345700","41.231200","39.451300","39.264000","37.721100","36.319800","36.053700","35.730300","34.029300","31.676000","31.475200","31.319100","31.042700","30.192700","29.946800","29.526900","29.396400","25.625300","25.365000","25.182000","25.040900","24.930900","24.905800","24.308200","24.149400","23.838100","23.664400","23.635400","22.142000","22.058500","21.357300","20.297300","20.070300","18.890600","18.531100","18.131300","18.100700","17.409100","16.098400","10.121100","0.410000","0.280000","0.670000","0.925000","1.705000","0.800000","0.670000","1.965000","0.800000","1.055000","0.670000","0.540000","0.670000","0.540000","0.800000","0.925000","0.410000","0.925000","0.925000","0.800000","0.925000","0.540000","0.410000","0.540000","0.925000","0.670000","0.280000","0.280000","0.280000","0.670000","0.410000","0.670000","0.410000","1.445000","0.540000","0.540000","0.410000","0.410000","0.540000","0.670000","0.540000","0.410000","0.410000","0.280000","0.410000","0.410000","0.670000","0.540000","0.410000","0.540000","0.410000","0.540000","0.280000","0","390.000000-396.000000 ","357.000000-364.000000 ","358.000000-366.000000 ","529.000000-539.000000 ","343.000000-348.000000 ",                      "389.000000-395.000000 ",                      "389.000000-395.000000 ",                       "390.000000-396.000000 ",                      "363.000000-366.000000 442.000000-450.000000 ",                     "392.000000-399.000000 ",                                                                                         "506.000000-512.000000 704.000000-711.000000 ",                     "406.000000-413.000000 ",                                                                                                               "452.000000-460.000000 ",                                            "323.000000-329.000000 ",                                           "435.000000-443.000000 ",                        "735.000000-741.000000 850.000000-856.000000 ",                   "749.000000-755.000000 852.000000-860.000000 ","630.000000-635.000000 ",                                                                    "746.000000-752.000000 834.000000-839.000000 ","632.000000-632.000000 751.000000-757.000000 815.000000-823.000000 ",                                                                                       "780.000000-788.000000 ",                       "701.000000-707.000000 776.000000-782.000000 ",                                           "571.000000-579.000000 ","618.000000-627.000000 ",                                                                                         "702.000000-710.000000 ","                     668.000000-687.000000 ",                                                                  "679.000000-687.000000 ",                                          "667.000000-677.000000 ",                     "675.000000-685.000000 ","650.000000-659.000000 ","741.000000-749.000000 ","771.000000-778.000000 ","797.000000-808.000000 ","835.000000-844.000000 891.000000-896.000000 ","891.000000-896.000000 ","807.000000-814.000000 897.000000-897.000000 ","809.000000-811.000000 850.000000-858.000000 897.000000-898.000000 ","871.000000-885.000000 890.000000-900.000000 ","870.000000-878.000000 ","870.000000-870.000000 894.000000-902.000000 ","871.000000-879.000000 ","872.000000-877.000000 889.000000-897.000000 ","889.000000-896.000000 ","895.000000-902.000000 ","889.000000-900.000000 ","890.000000-894.000000 911.000000-918.000000 ","871.000000-877.000000 ","883.000000-895.000000 ","895.000000-902.000000 ","804.000000-809.000000 869.000000-871.000000 ","805.000000-808.000000 867.000000-874.000000 895.000000-895.000000 ","889.000000-897.000000 ","822.000000-828.000000 894.000000-895.000000 ","898.000000-906.000000 ","0"},

//{"cyclo 13C only","35.378999304","2058","1.179347224","70","53","130.342100","126.377800","74.700300","59.323300","59.049300","58.261300","57.849400","55.637300","55.582800","49.896900","49.004400","48.915400","48.467900","45.345700","41.231200","39.451300","39.264000","37.721100","36.319800","36.053700","35.730300","34.029300","31.676000","31.475200","31.319100","31.042700","30.192700","29.946800","29.526900","29.396400","25.625300","25.365000","25.182000","25.040900","24.930900","24.905800","24.308200","24.149400","23.838100","23.664400","23.635400","22.142000","22.058500","21.357300","20.297300","20.070300","18.890600","18.531100","18.131300","18.100700","17.409100","16.098400","10.121100","0.410000","0.280000","0.670000","0.925000","1.705000","0.800000","0.670000","1.965000","0.800000","1.055000","0.670000","0.540000","0.670000","0.540000","0.800000","0.925000","0.410000","0.925000","0.925000","0.800000","0.925000","0.540000","0.410000","0.540000","0.925000","0.670000","0.280000","0.280000","0.280000","0.670000","0.410000","0.670000","0.410000","1.445000","0.540000","0.540000","0.410000","0.410000","0.540000","0.670000","0.540000","0.410000","0.410000","0.280000","0.410000","0.410000","0.670000","0.540000","0.410000","0.540000","0.410000","0.540000","0.280000","0","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""},

// here ends   pasted data
	{"","0"}};
	public int  nbv=7; /*number of element in list*/
	public  int[] 	vi=new int[1000];/* index in carbon list*/
	public  int[]	vi2=new int[1000];/* index in carbon list*/
	public  int[]	vi3=new int[1000];/* vertical position of label*/

	 public  double[] vp= new double[1000];
 	 public  double[] vw=new double[1000];;/* vertical width nat and procline width*/
	  public  double[] vwn=new double[1000];;/* vertical only nat  line width*/
	  	/*name,sw0,td0,swa,tda,number,ppm[],lv[],o1p*/

	public int td[]={62, 62};
     public  double[]	 sw=new double[2];
	 public double[] o1p=new double[2];
     public	int	i,tmp,j,k,l,tmpi,dii,dii2,lo,lo2,outmenunumber;
     public int un[]={0, 0};
	 public double tmpf,tmpf2,height,da;
	 public String tata;
        public         Dimension       size3;

        public	Button button0,button1,outchoicego;
        public Choice simple,un0,un1,optim_m,optimonlysw_m,outchoice;
		double optimonlysw_m_v=10d,optim_m_v=10d;
        public TextField tftd1,tfsw1,cf;
         public Label ls,l0,l1,tdl1,swl1,cfl;
public QuestionDialog	input;
//public OkWind okWind;

public cosa_simple	cosa;
public Image image = null;
public Applet applet;
public Button inputdata,inputopt,optim,optimonlysw;
public String pdata,line,word;
public int flagh,flagh2;
public double fromh,toh;
//public InputStream s;
//public DataInputStream d;
//public Reader r;
//public StringReader sr;
public  DataInput aDI,ad2;
public  StringTokenizer st,st2;
public String stri;
public int g3flag=-1;
 
//	public void start() {}	
//	public void init() {}	
        
//        class 	ButtonnListener implements ActionListener{
//         private Applet applet;
//         public ButtonListener(Applet applet) {
//            this.applet = applet;
//         }
//         public void actionPerformed(ActionEvent event) {
//            Button source = (Button)event.getSource();
//            applet.showStatus(source.getLabel()+ " activated");
//         }
//        }	 
  
	public void paint(Graphics g3) {   //paint
	//	if(g3flag!=0){System.out.println("paint g3 "+g3flag);g3flag=0;

	int p1dl,p1dax,p1d,p1dh0;
	int pbr1,pbr2,pbr30,pbr4,pbr5,pbr6,pbr7;
	int pbrl,pbrr,pal,par,pae,paf;
	int pabl,pabr;/*green*/
	int paol,paor;/* red */
	int po15,po2,po3,po4,po5,po6,swi;
        /// all values above ignored 
        int b,a,hh=15;
        int pbr3,po1,p1dh;
    //    int vt00=3,vt0=30,vt1=vt0+25,vt2=vt1+20,vt3=vt2+20,vt3b=vt3+20,vt4=vt3+20,vt5=vt4+20,vb,vh,vb1,vb2;
	int vt00=3,vt0=30,vt1=vt0+5,vt2=vt1+25,vt3=vt2+25,vt3b=vt3+25,vt4=vt3+25,vt5=vt4+25,vb,vh,vb1,vb2;

	p1dl=1;p1dax=90;p1d=p1dax-5;p1dh=30;
	pbr1=p1dax;pbr2=pbr1+5;pbr3=pbr2+10;pbr4=pbr3+20;pbr5=pbr4+10;pbr6=pbr5+5;
        

       // po1=par+25;po2=po1+5;po3=po2+5;po4=po3+15;po5=po4+5;po6=po5+5;
            size3 = DjPanel.this.getSize();        po6=size3.width-60;if(po6<640) po6=640;

		                            //  System.out.println(Int.toString(size3.width));
//System.out.println(""+(size3.width));
           // po5=po6-5;po4=po5-5;po3=po4-15;po2=po3-5;po1=po2-5;par=po1-40;pae=par+25;paf=pae;

        po5=po6-5;po4=po5-5;po3=po4-15;po2=po3-5;po1=po2-5;pae=po1-25;par=pae-15;paf=pae;
        swi=((par-pbr6)-50)/2;/* variable */
        
        pbr7=pbr6+swi;
	pbrl=pbr7;pbrr=par-swi;pal=pbrr+0;
	pabl=pal+2;pabr=par-2;/*green*/
	paol=pal+2;paor=par-2;/* red */
	///////////////////////////
	///////////////////////////
	///////////////////////////
	//		slider.setValue((int)(0.1d/33.267121d*sfo*(double)slider.getMaximum()));
	///////////////////////////
	
	///////////////////////////

	///////////////////////////
	ls.setLocation(20,vt00+2);

        tmpi=  pbr6+swi/3;
	simple.setLocation(80,vt00);
	simple.setSize(300,20);
	inputdata.setLocation(380,vt00-3);
	inputopt.setLocation(560,vt00-3);
//	outsparky.setLocation(660,vt00-3);
//	outxwinplot.setLocation(720,vt00-3);

	outchoice.setLocation(660,vt00-3);
	outchoice.setSize(100,20);
	outchoicego.setLocation(770,vt00-3);
	outchoicego.setSize(80,20);
	
	optim.setLocation(20,vt1-3);
	optimonlysw.setLocation(20,vt2-3);
	optim_m.setLocation(220,vt1);
	optimonlysw_m.setLocation(220,vt2);
	l1.setLocation(pbr6+00,vt3b);

		
//		l0.setLocation(pbr6,vt0);
		button0.setLocation(pbr6,vt3);
        button0.setSize(swi,vt4-vt3);
//        tdl0.setLocation(pbr6,vt2);
//        tdl0.setSize(swi/3,vt3-vt2);
//        tftd0.setLocation(tmpi,vt2);
//        tftd0.setSize(swi/3,vt3-vt2);
//		swl0.setLocation(pbr6,vt1);
//        swl0.setSize(swi/3,vt2-vt1);	
//        tfsw0.setLocation(tmpi,vt1);
  //      tfsw0.setSize(swi/3,vt2-vt1);
//        un0.setLocation(tmpi+swi/3,vt1);
//        un0.setSize(swi/3,vt2-vt1);
        tmpi=  pbrr+swi/3;


        button1.setLocation(pbrr,vt3);
        button1.setSize(swi,vt4-vt3);
		tdl1.setLocation(pbrr,vt2);
        tdl1.setSize(swi/3,vt3-vt2);
        tftd1.setLocation(tmpi,vt2);
        tftd1.setSize(swi/3,vt3-vt2);
		swl1.setLocation(pbrr,vt1);
        swl1.setSize(swi/3,vt2-vt1);		
        tfsw1.setLocation(tmpi,vt1);
        tfsw1.setSize(swi/3,vt2-vt1);
        un1.setLocation(tmpi+swi/3,vt1);
        un1.setSize(swi/3,vt2-vt1);
		cfl.setLocation(pbrr,vt3);
		cfl.setSize(swi/3,vt3-vt2);
		cf.setLocation(tmpi,vt3);
		cf.setSize(swi/3,vt3-vt2);
          vb=size3.height;vb1=vb-15;vh=vb1-vt5;vb2=vb-2;
          height=vh;
//if (un[1]==1)
  //                                  tfsw1.setText(""+(sw[1])); else 
    //                                tfsw1.setText(""+(sw[1]*sfo));
////////////////////////////////////////////ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZl=0
l=0;
j=0;
for(int i=0; i<nbc; i++){
//	vi[j]=i; vi2[j]=0;
	vwn[j]=       ((double)height*2d*lw[i] / ( (sw[0]) * sfo ));
	vw [j]=vwn[j]+(height*2d*(sfo*sw[0]/(double)td[0])/(sw[0]*sfo));
	if(ppm[i]-o1p[0]+sw[0]/2d>0d)
                vp[i]=((((ppm[i]-o1p[0]+sw[0]/2f) % sw[0])+0     )*(height)/sw[0]); 
	else       
                vp[i]=((((ppm[i]-o1p[0]+sw[0]/2f) % sw[0])+ sw[0])*(height)/sw[0]);    

	j++;
			            }
/* Center (not edge) */			
ov1=0;
for(int i=0;i<nbc;i++) for(k=0;k<i;k++)

			  if(
                        (vp[i]+vw[i]/2f>=vp[k]+vw[k]/2f && vp[i]-vw[i]/2f<vp[k]+vw[k]/2f) ||
                        (vp[k]+vw[k]/2f>=vp[i]+vw[i]/2f && vp[k]-vw[k]/2f<vp[i]+vw[i]/2f) ||
                        (vp[i]+vw[i]/2f>=vp[k]-vw[k]/2f && vp[i]-vw[i]/2f<vp[k]-vw[k]/2f) ||
                        (vp[k]+vw[k]/2f>=vp[i]-vw[i]/2f && vp[k]-vw[k]/2f<vp[i]-vw[i]/2f)
				) {
							/*set width of overlap */
							if (vp[k]+vw[k]/2f >= vp[i]+vw[i]/2f) omax=vp[i]+vw[i]/2f; else omax=vp[k]+vw[k]/2f;
							if (vp[k]-vw[k]/2f <= vp[i]-vw[i]/2f) omin=vp[i]-vw[i]/2f; else omin=vp[k]-vw[k]/2f;
							vw[j]=(omax-omin);
							/*set other things */
							vi[j]=i;vi2[j]=k;vi2[i]=1;vi2[k]=1;
							vp[j]=(omin+omax)/2.0f;j++;ov1++;/* add overlap rectangle*/
}
/* top edge */			
ov2=0;
for(int i=0;i<nbc;i++) for(k=0;k<nbc;k++) if(i != k)

			  if(
				 (vp[i]-height+vw[i]/2f>=vp[k]+vw[k]/2f && vp[i]-height-vw[i]/2f<vp[k]+vw[k]/2f) ||
			     (vp[k]+vw[k]/2f>=vp[i]-height+vw[i]/2f && vp[k]-vw[k]/2f<vp[i]-height+vw[i]/2f) ||
				 (vp[i]-height+vw[i]/2f>=vp[k]-vw[k]/2f && vp[i]-height-vw[i]/2f<vp[k]-vw[k]/2f) ||
			     (vp[k]+vw[k]/2f>=vp[i]-height-vw[i]/2f && vp[k]-vw[k]/2f<vp[i]-height-vw[i]/2f)
				) {
							/*set width of overlap */
                            if (vp[k]+vw[k]/2f >= vp[i]-height+vw[i]/2f) omax=vp[i]-height+vw[i]/2f; else omax=vp[k]+vw[k]/2f;
                            if (vp[k]-vw[k]/2f <= vp[i]-height-vw[i]/2f) omin=vp[i]-height-vw[i]/2f; else omin=vp[k]-vw[k]/2f;
							vw[j]=(omax-omin);
							/*set other things */
							vi[j]=i;vi2[j]=k;vi2[i]=1;vi2[k]=1;
							vp[j]=(omin+omax)/2.0f;j++;ov2++;/* add overlap rectangle*/
}
/* bottom edge */	
 ov3=0;		
for(int i=0;i<nbc;i++) for(k=0;k<nbc;k++) if(i != k)

			  if(
				 (vp[i]+height+vw[i]/2f>=vp[k]+vw[k]/2f && vp[i]+height-vw[i]/2f<vp[k]+vw[k]/2f) ||
			     (vp[k]+vw[k]/2f>=vp[i]+height+vw[i]/2f && vp[k]-vw[k]/2f<vp[i]+height+vw[i]/2f) ||
				 (vp[i]+height+vw[i]/2f>=vp[k]-vw[k]/2f && vp[i]+height-vw[i]/2f<vp[k]-vw[k]/2f) ||
			     (vp[k]+vw[k]/2f>=vp[i]+height-vw[i]/2f && vp[k]-vw[k]/2f<vp[i]+height-vw[i]/2f)
				) {
							/*set width of overlap */
				if (vp[k]+vw[k]/2f >= vp[i]+height+vw[i]/2f) omax=vp[i]+height+vw[i]/2f; else omax=vp[k]+vw[k]/2f;
				if (vp[k]-vw[k]/2f <= vp[i]+height-vw[i]/2f) omin=vp[i]+height-vw[i]/2f; else omin=vp[k]-vw[k]/2f;
							vw[j]=(omax-omin);
							/*set other things */
							vi[j]=i;vi2[j]=k;vi2[i]=1;vi2[k]=1;
							vp[j]=(omin+omax)/2.0f;j++;ov3++;/* add overlap rectangle*/
}

			nbv=j;
     g3.drawRect(pbr6,vt5,par-pbr6,vh);
		

	a=vt5;

	g3.setColor(Color.black);
	

	for(int j=0; j<nbc; j++){
    tmpf2=20000;
	for(int k=0; k<nbc; k++){
		if(vp[k]<=tmpf2) {i=k;tmpf2=vp[k];}
	}

										
						if(vt5+(int)vp[i]-aa<hh) {bb=aa+hh;aa=bb;} else bb=vt5+(int)vp[i];aa=bb;
					

						tata = "S"+(i+1);
				
					
  
   //ppm display      
			vp[i]=20000;
	}
	if((ov1+ov2) == 0) tata ="No overlap"; else {g3.setColor(Color.red);tata =(ov1+ov2)+ " overlap";}
        g3.setColor(Color.black);
        tata ="t1,max = "+Float.toString((float)(1000d/2d*td[0]/sw[0]/sfo))+" ms";



///////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
l=1;//o1p[1]=o1p[0];

			 j=0;
            for(int i=0; i<nbc; i++){
		
			vi[j]=i;
			vwn[j]=       ((double)height*2d*lw[i] / ( (sw[1]) * sfo ));
			vw [j]=vwn[j]+(height*2d*(sfo*sw[1]/(double)td[1])/(sw[1]*sfo));
			
            if(ppm[i]-o1p[1]+sw[1]/2d>0)
                vp[i]=((((ppm[i]-o1p[1]+sw[1]/2f) % sw[1])+0     )*(height)/sw[1]); 
                else       
                vp[i]=((((ppm[i]-o1p[1]+sw[1]/2f) % sw[1])+ sw[1])*(height)/sw[1]);    
			j++;
			            }
/* Center (not edge) */			
ov1=0;
for(int i=0;i<nbc;i++) for(k=0;k<i;k++)

			  if(
                        (vp[i]+vw[i]/2f>=vp[k]+vw[k]/2f && vp[i]-vw[i]/2f<vp[k]+vw[k]/2f) ||
                        (vp[k]+vw[k]/2f>=vp[i]+vw[i]/2f && vp[k]-vw[k]/2f<vp[i]+vw[i]/2f) ||
                        (vp[i]+vw[i]/2f>=vp[k]-vw[k]/2f && vp[i]-vw[i]/2f<vp[k]-vw[k]/2f) ||
                        (vp[k]+vw[k]/2f>=vp[i]-vw[i]/2f && vp[k]-vw[k]/2f<vp[i]-vw[i]/2f)
				) {
							/*set width of overlap */
							if (vp[k]+vw[k]/2f >= vp[i]+vw[i]/2f) omax=vp[i]+vw[i]/2f; else omax=vp[k]+vw[k]/2f;
							if (vp[k]-vw[k]/2f <= vp[i]-vw[i]/2f) omin=vp[i]-vw[i]/2f; else omin=vp[k]-vw[k]/2f;
							vw[j]=(omax-omin);
							/*set other things */
							vi[j]=i;vi2[j]=k;if(l==0){vi2[i]=1;vi2[k]=1;}
							vp[j]=(omin+omax)/2.0f;j++;ov1++;/* add overlap rectangle*/
}
/* top edge */			
ov2=0;
for(int i=0;i<nbc;i++) for(k=0;k<nbc;k++) if(i != k)

			  if(
				 (vp[i]-height+vw[i]/2f>=vp[k]+vw[k]/2f && vp[i]-height-vw[i]/2f<vp[k]+vw[k]/2f) ||
			     (vp[k]+vw[k]/2f>=vp[i]-height+vw[i]/2f && vp[k]-vw[k]/2f<vp[i]-height+vw[i]/2f) ||
				 (vp[i]-height+vw[i]/2f>=vp[k]-vw[k]/2f && vp[i]-height-vw[i]/2f<vp[k]-vw[k]/2f) ||
			     (vp[k]+vw[k]/2f>=vp[i]-height-vw[i]/2f && vp[k]-vw[k]/2f<vp[i]-height-vw[i]/2f)
				) {
							/*set width of overlap */
                            if (vp[k]+vw[k]/2f >= vp[i]-height+vw[i]/2f) omax=vp[i]-height+vw[i]/2f; else omax=vp[k]+vw[k]/2f;
                            if (vp[k]-vw[k]/2f <= vp[i]-height-vw[i]/2f) omin=vp[i]-height-vw[i]/2f; else omin=vp[k]-vw[k]/2f;
							vw[j]=(omax-omin);
							/*set other things */
							vi[j]=i;vi2[j]=k;if(l==0){vi2[i]=1;vi2[k]=1;}
							vp[j]=(omin+omax)/2.0f;
							j++;ov2++;/* add overlap rectangle*/
}
/* bottom edge */	
 ov3=0;		
for(int i=0;i<nbc;i++) for(k=0;k<nbc;k++) if(i != k)

			  if(
				 (vp[i]+height+vw[i]/2f>=vp[k]+vw[k]/2f && vp[i]+height-vw[i]/2f<vp[k]+vw[k]/2f) ||
			     (vp[k]+vw[k]/2f>=vp[i]+height+vw[i]/2f && vp[k]-vw[k]/2f<vp[i]+height+vw[i]/2f) ||
				 (vp[i]+height+vw[i]/2f>=vp[k]-vw[k]/2f && vp[i]+height-vw[i]/2f<vp[k]-vw[k]/2f) ||
			     (vp[k]+vw[k]/2f>=vp[i]+height-vw[i]/2f && vp[k]-vw[k]/2f<vp[i]+height-vw[i]/2f)
				) {
							/*set width of overlap */
				if (vp[k]+vw[k]/2f >= vp[i]+height+vw[i]/2f) omax=vp[i]+height+vw[i]/2f; else omax=vp[k]+vw[k]/2f;
				if (vp[k]-vw[k]/2f <= vp[i]+height-vw[i]/2f) omin=vp[i]+height-vw[i]/2f; else omin=vp[k]-vw[k]/2f;
							vw[j]=(omax-omin);
							/*set other things */
							vi[j]=i;vi2[j]=k;if(l==0){vi2[i]=1;vi2[k]=1;}
							vp[j]=(omin+omax)/2.0f;j++;ov3++;/* add overlap rectangle*/
				}


			nbv=j;
	///////////////////////////
	  	
                       
                g3.drawRect(pbr6,vt5,par-pbr6,vh);
//                g3.drawRect(pbr6,vt5,pbr7-pbr6,vh);
           
  //a=size3.height;hh=15;
  ///////////////////////////////////////

      for(int i=0; i<nbc; i++){
        	g3.setColor(Color.yellow);
	       if(protdim[i][0]==0d) g3.fillRoundRect(pbr6,vt5+(int)(vp[i]-vw[i]/2),(pabr-pbr6),(int)vw[i],5,5);/*yellow*/			//////////   ******   FILLLLLLLL
		   else for(lo=1;lo<(2*(int)protdim[i][0]+1);lo+=2){
			g3.fillRoundRect((int)(pbr6   +(offseth-protdim[vi[i]][lo])*scaleh*(pabr-pbr6)   ) ,vt5+(int)(vp[i]-vw[i]/2),(int)((pabr-pbr6)   *scaleh*(protdim[vi[i]][lo]-protdim[vi[i]][lo+1])    ),(int)vw[i],5,5);
			
	//System.out.println("left"+protdim[i][lo]+"light"+protdim[i][lo+1]+"offseth"+offseth+"scaleh"+scaleh);
}
        	g3.setColor(Color.green);
	       if(protdim[i][0]==0d) g3.fillRoundRect(pbr6,vt5+(int)(vp[i]-vwn[i]/2),pabr-pbr6,(int)vwn[i],5,5);/*GREEN*/			//////////   ******   FILLLLLLLL
		   else for(lo=1;lo<2*(int)protdim[i][0]+1;lo+=2)
			g3.fillRoundRect((int)(pbr6   +(offseth-protdim[vi[i]][lo])*scaleh*(pabr-pbr6)   ),vt5+(int)(vp[i]-vwn[i]/2),(int)((pabr-pbr6)   *scaleh*(protdim[vi[i]][lo]-protdim[vi[i]][lo+1])    ),(int)vwn[i],5,5);/*GREEN*/			//////////   ******   FILLLLLLLL


                               }
////////////////////////////////


     g3.setColor(Color.red);
  for( i=nbc; i<nbv; i++){
			
	if(protdim[vi[i]][0]==0d) g3.fillRoundRect(pbr6,vt5+(int)(vp[i]-vw[i]/2),paor-pbr6,(int)vw[i],5,5);/*RED*/			//////////   ******   FILLLLLLLL

	else {
		flagh2=0;for(lo=1;lo<(2*(int)protdim[vi[i]][0]+1);lo+=2) 
	
		for(lo2=1;lo2<(2*(int)protdim[vi2[i]][0]+1);lo2+=2){
///Overlap in 1H
					flagh=0;
if	 (protdim[vi2[i]][lo2+0]>=protdim[ vi[i]][ lo+0] && protdim[vi2[i]][lo2+1]<=protdim[ vi[i]][lo +1])             {flagh=1;fromh=protdim[ vi[i]][lo ];toh=protdim[ vi[i]][lo +1];}//inclusions
if	 (protdim[ vi[i]][lo +0]>=protdim[vi2[i]][lo2+0] && protdim[ vi[i]][lo +1]<=protdim[vi2[i]][lo2+1])             {flagh=1;fromh=protdim[vi2[i]][lo2];toh=protdim[vi2[i]][lo2+1];}//inclusions      
if	 (protdim[vi2[i]][lo2+0]> protdim[ vi[i]][ lo+1] && protdim[vi2[i]][lo2+0]<=protdim[ vi[i]][ lo  ] && flagh==0) {flagh=1;fromh=protdim[vi2[i]][lo2];toh=protdim[ vi[i]][lo +1];}//imbirc
if	 (protdim[ vi[i]][lo +0]> protdim[vi2[i]][lo2+1] && protdim[ vi[i]][lo +0]<=protdim[vi2[i]][lo2  ] && flagh==0) {flagh=1;fromh=protdim[vi [i]][lo ];toh=protdim[vi2[i]][lo2+1];}//imbirc
//	   					  (vp[i]+vw[i]/2f>=vp[k]+vw[k]/2f && vp[i]-vw[i]/2f<vp[k]+vw[k]/2f) ||
//                        (vp[k]+vw[k]/2f>=vp[i]+vw[i]/2f && vp[k]-vw[k]/2f<vp[i]+vw[i]/2f) ||
//                        (vp[i]+vw[i]/2f>=vp[k]-vw[k]/2f && vp[i]-vw[i]/2f<vp[k]-vw[k]/2f) ||
//                        (vp[k]+vw[k]/2f>=vp[i]-vw[i]/2f && vp[k]-vw[k]/2f<vp[i]-vw[i]/2f)
//if	 (protdim[ vi[i]][ lo+0]<=protdim[vi2[i]][lo2+0] && protdim[ vi[i]][ lo+0]>=protdim[vi2[i]][lo2+1]) {flagh=1;fromh=8d;toh=7d;System.out.println("5");}
//if	 (protdim[ vi[i]][ lo+0]<=protdim[vi2[i]][lo2+1] && protdim[ vi[i]][ lo+0]>=protdim[vi2[i]][lo2+0]) {flagh=1;fromh=8d;toh=7d;System.out.println("6");}
//if	 (protdim[ vi[i]][ lo+1]<=protdim[vi2[i]][lo2+0] && protdim[ vi[i]][ lo+1]>=protdim[vi2[i]][lo2+1]) {flagh=1;fromh=8d;toh=7d;System.out.println("7");}
//if	 (protdim[ vi[i]][ lo+1]<=protdim[vi2[i]][lo2+1] && protdim[ vi[i]][ lo+1]>=protdim[vi2[i]][lo2+0]) {flagh=1;fromh=8d;toh=7d;System.out.println("8");}
			if(flagh == 1) {
							g3.fillRoundRect((int)(pbr6   +(offseth-fromh)*scaleh*(pabr-pbr6)   ),vt5+(int)(vp[i]-vw[i]/2),(int)((pabr-pbr6)   *scaleh*(fromh-toh)    ),(int)vw[i],5,5);	
							tata = "S"+(vi2[i]+1)+"&S"+(vi[i]+1); 
							if(flagh2==0){g3.drawString(tata,(int)(pbr6   +(offseth-fromh)*scaleh*(pabr-pbr6)   ),vt5+(int)(vp[i]-vw[i]/2));flagh2=1;}//label only once each pair		
			}
		}	
	 }
  }
////////////////////////////////

  /*double loop to draw from large to small vp[]*/

a=vt5;
     g3.setColor(Color.black);
 for(int j=nbc; j<nbv; j++){
  
    tmpf=200000;
		for(int k=nbc; k<nbv; k++){
			if(vp[k]<=tmpf) {i=k;tmpf=vp[k];}
		}		
				g3.drawLine(po2,vt5+(int)(vp[i]-vw[i]/2),po2,vt5+(int)(vp[i]+vw[i]/2));/*vert*/  //Draw forks on the right in case of overlap
				g3.drawLine(po2,vt5+(int)(vp[i]-vw[i]/2),po1,vt5+(int)(vp[i]-vw[i]/2));/*hor*/
				g3.drawLine(po2,vt5+(int)(vp[i]+vw[i]/2),po1,vt5+(int)(vp[i]+vw[i]/2));/*hor*/
				g3.drawLine(po2,vt5+(int)(vp[i]        ),po3,vt5+(int)(vp[i]        ));/*hor*/
				
				
				if(vt5+(int)vp[i]-a<hh) {b=a+hh;a=b;} else b=vt5+(int)vp[i];a=b;
				g3.drawLine(po3,vt5+(int)(vp[i]),po4,b);/*hor*/
				g3.drawLine(po4,              b ,po5,b);/*hor*/
				
				
				tata = "S"+(vi2[i]+1)+"&S"+(vi[i]+1);
				g3.drawString(tata,po6,b);
				vp[i]=200000;
}

////////////////////////////////

     g3.setColor(Color.blue);
     g3.drawLine(p1d,vt5,p1d,vt5+vh);					//vertical blue line
     g3.setColor(Color.black);
	  g3.drawLine(p1dax,vt5,p1dax,vt5+vh);				//vertical black line

aa=vt5;
////
a=vt5;

     g3.setColor(Color.black);
  for(int i=nbc-1; i>=0; i-=1){

				tmp=vt5+(int)((  ppm[vi[i]]-min)  /sw[0]                     *(height));
				tmp=vt5+(int)((((ppm[vi[i]]-o1p[0]+sw[0]/2f))     )*(height/sw[0])); 

						 tata = Float.toString((float)(ppm[vi[i]]));
					if(tmp-a<hh) {b=a+hh;a=b;} else b=tmp;a=b;
					g3.drawString(tata,p1dl,b);
				g3.setColor(Color.blue);
				g3.drawLine(p1d-p1dh,tmp,p1d,tmp);				//draw carbon line
				
				g3.setColor(Color.black);
				g3.drawLine(p1d-p1dh,tmp,p1d-p1dh-10,b);					
				g3.drawLine(pbr1,tmp,pbr2,tmp);					//draw first horiz segment of black lines
				g3.drawLine(pbr2,tmp,pbr3,b);					//draw second segment to label blac line
				g3.drawLine(pbr3,b  ,pbr4,b);					//draw third horiz segment end of label
	//			if( vi2[i] == 1) g3.setColor(Color.red); else g3.setColor(Color.black); not workink really
	
				tata = "S"+(i+1);
				g3.drawString(tata,pbr3,b);
				g3.setColor(Color.black);
				vi3[i]=b;										//store position for next segment
	}
	
	a=vt5;
	g3.setColor(Color.black);
	for(int j=0; j<nbc; j++){
    tmpf2=20000;
	for(int k=0; k<nbc; k++){
		if(vp[k]<=tmpf2) {i=k;tmpf2=vp[k];}
	}

		if(protdim[i][0]==0d) g3.drawRoundRect(pbr6,vt5+(int)(vp[i]-vw[i]/2),pabr-pbr6,(int)vw[i],5,5);//black frame about signals			//////////   ******   FILLLLLLLL
		  else for(lo=1;lo<2*(int)protdim[i][0]+1;lo+=2)
			g3.drawRoundRect((int)(pbr6   +(offseth-protdim[vi[i]][lo])*scaleh*(pabr-pbr6)   ),vt5+(int)(vp[i]-vw[i]/2),(int)((pabr-pbr6)   *scaleh*(protdim[vi[i]][lo]-protdim[vi[i]][lo+1])    ),(int)vw[i],5,5);/*GREEN*/			//////////   ******   FILLLLLLLL



					
		g3.drawLine(pbr6,vt5+(int)vp[i],par,vt5+(int)vp[i]); //horiz line through
					
		if(vt5+(int)vp[i]-aa<hh) {bb=aa+hh;aa=bb;} else bb=vt5+(int)vp[i];aa=bb;
		g3.drawLine(pbr4,vi3[i],pbr6,vt5+(int)vp[i]);//draw smal segment to label

		g3.drawLine(par,vt5+(int)vp[i],pae,bb);//draw smal segment to label

		tata = "S"+(i+1);
		g3.drawString(tata,paf,bb);
					
  
   //ppm display      
			vp[i]=20000;
	}
	if((ov1+ov2) == 0) tata ="No ov."; else {g3.setColor(Color.red);tata =(ov1+ov2)+ " ov.";}
	g3.drawString(tata,par,vb2);
        g3.setColor(Color.black);
       // tata ="t1,max = "+Float.toString((float)(1000d/2d*td[l]/sw[l]/sfo))+" ms";
       // g3.drawString(tata,pbr6+200,vt5-5);

////////////////////////////////////////////ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ  END   l=1

////////////////////////////////

             //g3.drawLine(200,(int)sw,300,(int)sw);
             //	tata = Float.toString((float)(sw[1]))+" ppm "+Float.toString((float)(sfo*sw[1]))+" Hz"+" (t1,max = "+Float.toString((float)(1000d/2d*td[l]/sw[l]/sfo))+" ms)";
			              	tata ="t1,max = "+Float.toString((float)(1000d/2d*td[l]/sw[l]/sfo))+" ms";

          //   g3.drawString(tata,pbr6,vb2);
             g3.drawString(tata,pbrr,vt5-3);

//}	else System.out.println("skipped repain");

}

         public void adjustmentValueChanged(AdjustmentEvent e) {
                       
                        sw[1]=(double)(0.1d/slider.getValue()*(double)slider.getMaximum());        

        if (un[1]==1)tfsw1.setText(""+(sw[1])); else tfsw1.setText(""+(sw[1]*sfo));
                        g3flag=1;DjPanel.this.repaint();
               
	}
       	public DjPanel(Applet applet,Slider aSlider,double sfoi, double o2p) {
		simple = new Choice();
        button0 = new Button("Set full SW/Min. N");
        button1 = new Button("Set optimized conditions");
		
		ls = new Label("Sample");
//		l0 = new Label("Full Spectrum");
		l1 = new Label("Predicted signal positions");
//		tdl0 = new Label("TD0 =");
//        tftd0 = new TextField(""+(td[0]));
		tdl1 = new Label("N =");
        tftd1 = new TextField(""+(td[1]));
		cf= new TextField(""+(o1p[1]));

//		swl0 = new Label("SW0 =");
//        tfsw0 = new Label(Double.toString(sw[0]));
		swl1 = new Label("SW =");cfl=new Label("CF(+SR) =");
        tfsw1 = new TextField(Double.toString(sw[1]));
		un0 = new Choice();
        un1 = new Choice();
		inputdata = new Button("Edit current data...");
		inputopt = new Button("Options...");
//		outsparky= new Button(".save");
//		outxwinplot= new Button(".xwp");
		outchoicego=new Button("Do !");
		outchoice=new Choice();
		outchoice.add("Output ornament section for Sparky .save file - center of peaks for well defined regions)");
		outchoice.add("Output ornament section for Sparky .save file - dots along proton dispersion (for not well defined regions)");
		outchoice.add("Output .xwp file for Bruker xwinplot files");
		optim= new Button("Optimize N&SW ...");
		optimonlysw= new Button("Optimize SW ...");
		optim_m= new Choice();
		optimonlysw_m= new Choice();
		optim_m.add("1%");
		optim_m.add("5%");
		optim_m.add("10%");
		optim_m.add("50%");
		optim_m.add("100%");
		optim_m.add("500%");
		optim_m.add("no limit");
		optim_m.select(2);

		optimonlysw_m= new Choice();
		optimonlysw_m.add("1%");
		optimonlysw_m.add("5%");
		optimonlysw_m.add("10%");
		optimonlysw_m.add("50%");
		optimonlysw_m.add("100%");
		optimonlysw_m.add("500%");
		optimonlysw_m.add("no limit");
		optimonlysw_m.select(2);

sfo=sfoi;
sampletot=0;
for(i=0;sampletot==0;i++){
		if(Double.parseDouble(data[i][1]) == 0) {sampletot=i;//simple.add("Take data from clipboard...");
		}
	else{
		simple.add(data[i][0]);
	}
		}
		//orientChoice.add("Vertical");



//         button0.addActionListener(new ButtonListener(this));
       		this.applet=applet; //(for Question dialog)

add(ls);
//		add(l0);
		add(l1);
//	add(simple);// WWWW
		add(inputdata);
		add(inputopt);
		add(cfl);
		inputdata.addActionListener(this);
		add(optim);
		add(optimonlysw);
		add(optim_m);
		add(optimonlysw_m);
		add(outchoice);
		add(outchoicego);

        un0.add("Hz ");un0.add("ppm");
        un1.add("Hz ");un1.add("ppm");
//		add(swl0);add(tfsw0);add(un0);
        add(swl1);add(tfsw1);add(un1);        
//		add(tdl0);add(tftd0);
        add(tdl1);add(tftd1);add(cfl);add(cf);
        //add(button0);
		//add(button1);
		optimonlysw.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent event) {
							 cosa=new cosa_simple();
							// System.out.println(".."+sfo+" "+nbc+" .. ");
				

							 sw[1]=cosa.Opttd(sfo,nbc,ppm,lw,protdim,2,Integer.parseInt(tftd1.getText()),optimonlysw_m_v, sasi,comment+commentopt)/sfo;
							sw[1]=cosa.swswop/sfo;
							if (un[1]==1) tfsw1.setText(""+(sw[1])); else    tfsw1.setText(""+(sw[1]*sfo));
							slider.setValue((int)(0.1d/sw[1]*(double)slider.getMaximum()));
							td[1]=cosa.td;
							if (un[1]==1) tfsw1.setText(""+(sw[1])); else    tfsw1.setText(""+(sw[1]*sfo));

							 tftd1.setText(""+(td[1]));
							sw[0]=cosa.sw0/sfo;
							td[0]=cosa.td0;                               g3flag=2; DjPanel.this.repaint();
			}
		});

	inputopt.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent event) {
				final Frame my_frame = new Frame("Options");
				final Panel can = new Panel(new GridLayout(nbc+1,nbc+1));
				final  int[][] table_comp=new int[nbc][nbc];
				can.setSize(500,100);
				my_frame.add(can,"Center");
				k=0;
				can.add(new Label(""));k++;	for(i=0;i<nbc;i++){ can.add(new Label(""+(i+1)));k++;}		//first line
				for(i=0;i<nbc;i++){ can.add(new Label(""+(i+1))); k++;
					for(j=0;j<i;j++) {can.add(new Checkbox(""));table_comp[i][j]=k;table_comp[j][i]=k;k++;	}can.add(new Label("F"));table_comp[i][j]=k;table_comp[j][i]=k;k++;
					for(j=i+1;j<nbc;j++) {can.add(new Label(""));k++;	}
				}
				//				Checkbox  che2 = new Checkbox();
				Checkbox  che = new Checkbox();
				for(i=0;i<nbc;i++) for(j=0;j<i;j++) {
					che=(Checkbox)can.getComponent(table_comp[i][j]);
					if(sasi[i][j] != 0) che.setState(true);
				}	
			my_frame.setSize(800,500);my_frame.show();
			final Panel toppanel = new Panel(new BorderLayout(2,2));
			final Label t1mlabel = new Label("Does not allow the largest t1 to exceed : ");
			final Label t1mlabel2 = new Label(" s                    ");
			final Label t1mlabel3 = new Label("Overlap is allowed for the following pairs of signals");


			final TextField lab = new TextField(""+inputt1max);
			toppanel.add(t1mlabel,"West");
			toppanel.add(lab,"Center");
			toppanel.add(t1mlabel2,"East");
			toppanel.add(t1mlabel3,"South");
			my_frame.add(toppanel,"North");
			lab.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent event) {
							Checkbox  che2 = new Checkbox();
							inputt1max=Double.parseDouble(lab.getText());
							for(i=0;i<nbc;i++) for(j=i+1;j<nbc;j++) 
								if(ol[i]>ol[j]) {
									if((ol[i]-addelta[i])<((ol[j]+addelta[j]+(1d/inputt1max)))) //HERE assume fadr = 1 ??
										{che2=(Checkbox)can.getComponent(table_comp[i][j]);che2.setState(true);}else
										{che2=(Checkbox)can.getComponent(table_comp[i][j]);che2.setState(false);}
								}else{
									if((ol[j]-addelta[j])<((ol[i]+addelta[i]+(1d/inputt1max)))) //HERE assume fadr = 1 ??
										{che2=(Checkbox)can.getComponent(table_comp[i][j]);che2.setState(true);}else
										{che2=(Checkbox)can.getComponent(table_comp[i][j]);che2.setState(false);}
								}	
				}
			});
			Button but = new Button("OK !");
			my_frame.add(but,"South");
			my_frame.show();

			but.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent event) {
											//for(i=0;i<100;i++){System.out.println("component "+i+""+can.getComponent(i));}
							//System.out.println("component "+i+"/"+j+" ckeck ="+(Checkbox)can.getComponent(table_comp[i][j]));}
					Checkbox  che2 = new Checkbox();
					for(i=0;i<nbc;i++)			for(j=0;j<nbc;j++){
					if(i!=j)che2=(Checkbox)can.getComponent(table_comp[i][j]); 
					if(che2.getState()==false) {
						sasi[i][j]=0;
						sasi[j][i]=0;
					}else{  
						sasi[i][j]=-1;
							sasi[j][i]=-1;
					}
				}	
				commentopt="";
				for(i=0;i<nbc;i++)			for(j=i+1;j<nbc;j++) if (sasi[i][j] !=0 )
				commentopt=commentopt+"Carbons "+(i+1)+" and "+(j+1)+" at "+ppm[j]+" and "+ppm[i]+" ppm are allowed to overlap !\n";
				my_frame.hide();
			}});
		}});

	
		optim.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent event) {
							 cosa=new cosa_simple();
							// System.out.println(".."+sfo+" "+nbc+" .. ");

							 sw[1]=cosa.Opttd(sfo,nbc,ppm,lw,protdim,2,0,optim_m_v,sasi,comment+commentopt)/sfo;
							sw[1]=cosa.swswop/sfo;
							if (un[1]==1) tfsw1.setText(""+(sw[1])); else    tfsw1.setText(""+(sw[1]*sfo));
							
//							if (un[0]==1) tfsw0.setText(""+(sw[0])); else    tfsw0.setText(""+(sw[0]*sfo));
							slider.setValue((int)(0.1d/sw[1]*(double)slider.getMaximum()));
							td[1]=cosa.td;
							if (un[1]==1) tfsw1.setText(""+(sw[1])); else    tfsw1.setText(""+(sw[1]*sfo));

							 tftd1.setText(""+(td[1]));
							sw[0]=cosa.sw0/sfo;
							td[0]=cosa.td0;//							 tftd0.setText(""+(td[0]));
                                g3flag=3;DjPanel.this.repaint();
							///	Frame my_frame = djgetFrame(djPanel.this);
							///	 	okWind  = new OkWind(	djgetFrame(djPanel.this), 	this,"Data edition","Comment", 45, image,true);
							///okWind.setVisible(true);
							
	final Frame my_frame = new Frame("Comments about the optimization");
	//Label lab = new Label(cosa.comment);
	//my_frame.add(lab,"North");
		TextArea texta = new TextArea(cosa.comment);

	//TextArea texta = new TextArea(cosa.comment,20,60,TextArea.SCROLLBARS_BOTH);
	        my_frame.add(texta,"Center");

	//final Panel can = new Panel(new GridLayout(nbc+1,nbc+1));
	//final  int[][] table_comp=new int[nbc][nbc];
	//can.setSize(500,100);
	//my_frame.add(can,"Center");
	Button but = new Button("OK !");
	my_frame.add(but,"South");
	// Checkbox  che = new Checkbox();
	//Button tbt = new Button("o");
	k=0;
	//can.add(new Label(""));k++;	for(i=0;i<nbc;i++){ can.add(new Label(""+(i+1)));k++;}		//first line
	//for(i=0;i<nbc;i++){ can.add(new Label(""+(i+1))); k++;
	//	for(j=0;j<i;j++) {can.add(new Checkbox(""));table_comp[i][j]=k;table_comp[j][i]=k;k++;	}can.add(new Label(""));table_comp[i][j]=k;table_comp[j][i]=k;k++;
	//	for(j=i+1;j<nbc;j++) {can.add(new Label(""));k++;	}
	//}
		my_frame.setSize(800,500);my_frame.show();
	//public void dialogDismissed(Dialog d) {}	
	//my_frame.add;
	
	
	but.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent event) {
			my_frame.hide();
	} });
}});

///End	
		outchoicego.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent event) {
				if(outchoice.getSelectedIndex()==0) outsparky(0d);
				if(outchoice.getSelectedIndex()==1) outsparky(0.05d);
				if(outchoice.getSelectedIndex()==2) outxwinplot();
			}
		});
	//	outchoice.addItemListener(new ItemListener() {
	//		public void itemStateChanged(ItemEvent what2) {
	//						 outmenunumber=outchoice.getSelectedIndex();
	//					//	if(outchoice.getSelectedIndex()==1) outmenunumber=1;
	//	}
	//	});	
		optim_m.addItemListener(new ItemListener() {
			public void itemStateChanged(ItemEvent what2) {
							if(optim_m.getSelectedIndex()==0) optim_m_v=1d;			
							if(optim_m.getSelectedIndex()==1) optim_m_v=5d;	
							if(optim_m.getSelectedIndex()==2) optim_m_v=10d;
							if(optim_m.getSelectedIndex()==3) optim_m_v=50d;							
							if(optim_m.getSelectedIndex()==4) optim_m_v=100d;
							if(optim_m.getSelectedIndex()==5) optim_m_v=500d;							
							if(optim_m.getSelectedIndex()==6) optim_m_v=1000000000000000d;							
							System.out.println("optim_m_v= "+optim_m_v);

		}
		});
		optimonlysw_m.addItemListener(new ItemListener() {
			public void itemStateChanged(ItemEvent what2) {
							if(optimonlysw_m.getSelectedIndex()==0) optimonlysw_m_v=1d;			
							if(optimonlysw_m.getSelectedIndex()==1) optimonlysw_m_v=5d;	
							if(optimonlysw_m.getSelectedIndex()==2) optimonlysw_m_v=10d;
							if(optimonlysw_m.getSelectedIndex()==3) optimonlysw_m_v=50d;							
							if(optimonlysw_m.getSelectedIndex()==4) optimonlysw_m_v=100d;
							if(optimonlysw_m.getSelectedIndex()==5) optimonlysw_m_v=500d;							
							if(optimonlysw_m.getSelectedIndex()==6) optimonlysw_m_v=1000000000000000d;							
							System.out.println("optimonlysw_m_v= "+optimonlysw_m_v);

		}
		});
		simple.addItemListener(new ItemListener() {
			public void itemStateChanged(ItemEvent what2) {
							String s=((Choice)what2.getSource()).getSelectedItem();
							int index = simple.getSelectedIndex();
														  System.out.println("choice number "+index+ ":"+s);
							if(index == sampletot) {
								data[samplenumber]=data[1];
							}
							samplenumber=index;
							sw[0]=Double.parseDouble(data[samplenumber][1]); 
							sw[1]=Double.parseDouble(data[samplenumber][3]);
							td[0]=Integer.parseInt(data[samplenumber][2]); 
							td[1]=Integer.parseInt(data[samplenumber][4]);
							nbc=Integer.parseInt(data[samplenumber][5]);j=nbc;
							min=1999995555559d;
							max=-1222222444442d;
							for(i=0;i<nbc;i++){
									ppm[i]=Double.parseDouble(data[samplenumber][6+i]); 
								if(ppm[i]<min) min=ppm[i];
									lw[i]=Double.parseDouble(data[samplenumber][6+i+j]);
								if(ppm[i]>max) max=ppm[i];
								
								if (un[1]==1) tfsw1.setText(""+(sw[1])); else  tfsw1.setText(""+(sw[1]*sfo));
								tftd1.setText(""+(td[1]));
								slider.setValue((int)(0.1d/sw[1]*(double)slider.getMaximum()));

								protdim[i][0]=0;

								aDI= new DataInputStream(new StringBufferInputStream(data[samplenumber][6+2*nbc+i+1])); //OK
								dii2=0;try {while((line = aDI.readLine()) != null) {
					System.out.println("For carbon "+i+"line : "+line);
								st = new StringTokenizer(line);
								k=0;
								while(st.hasMoreTokens()){
									//st.whitespaceChars("-","-");
									word=st.nextToken("-");
								    System.out.println("."+word);
									protdim[i][k*2+1]=Double.parseDouble(word); 
									//st.whitespaceChars(" "," ");
									word=st.nextToken(" ");
								    System.out.println("."+word);
									protdim[i][k*2+2]=-Double.parseDouble(word); 
									if(protdim[i][k*2+2]>protdim[i][k*2+1]) {o1p[0]=protdim[i][k*2+1];protdim[i][k*2+1]=protdim[i][k*2+2];protdim[i][k*2+2]=o1p[0];}
									System.out.println("w "+(protdim[i][k*2+1]-protdim[i][k*2+2]));
									k++;
								}
								protdim[i][0]=k;
								for(k=0;k<2*protdim[i][0]+1;k++)System.out.println(protdim[i][k]);

								}}  catch (IOException e){;}
							}

o1p[0]=(max+min)/2d;
//o1p[0]=o2p;
o1p[1]=o1p[0];
if(Double.parseDouble(data[samplenumber][6+j+j]) == 0d) o1p[1]=o1p[0];else o1p[1]=Double.parseDouble(data[samplenumber][6+j+j]) ;
cf.setText(""+o1p[1]);
//System.out.println(""+Double.toString(o1p[0])+" "+Double.toString(o1p[1]));
	min=1999995555559d;
	max=-1222222444442d;
	for(j=0;j<nbc;j++){
		for(int i=1;i<2*(int)(protdim[j][0])+1;i++){
		if(min>protdim[j][i]) min=protdim[j][i];
		if(max<protdim[j][i]) max=protdim[j][i];
		}
	}
	scaleh=1d/(max-min);		////1/(maxh-minh)
	offseth=max;			///  (maxh)
			for(i=0;sampletot==0;i++){
				if(Double.parseDouble(data[i][1]) == 0) sampletot=i;
			}         
			slider.setMinimum((int)(0.1*(double)slider.getMaximum()/sw[0]));
			if (un[1]==1) tfsw1.setText(""+(sw[1])); else  tfsw1.setText(""+(sw[1]*sfo));
			tftd1.setText(""+(td[1]));
			slider.setValue((int)(0.1d/sw[1]*(double)slider.getMaximum()));
			g3flag=4;DjPanel.this.repaint();
			for(i=0;i<nbc;i++)for(j=0;j<nbc;j++) sasi[i][j]=0;
			}
		});  
/*        un0.addItemListener(new ItemListener() {
			public void itemStateChanged(ItemEvent what) {
                                String s=((Choice)what.getSource()).getSelectedItem();
				if (s.equals("ppm")) 
                                un[0]=1;else un[0]=0;
                       }
		});  */  
       un1.addItemListener(new ItemListener() {
			public void itemStateChanged(ItemEvent what) {
                                String s=((Choice)what.getSource()).getSelectedItem();
				if (s.equals("ppm")) 
                                un[1]=1;else un[1]=0;
                                if (un[1]==1) tfsw1.setText(""+(sw[1])); else    tfsw1.setText(""+(sw[1]*sfo));
                       }
		});


       cf.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent event) {
				o1p[1]=Double.parseDouble(cf.getText());
				cf.setText(""+o1p[1]);
				DjPanel.this.repaint();
			}
		});

       tfsw1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent event) {
				if(un[1]==1) sw[1]=Double.parseDouble(tfsw1.getText()); else
                                            sw[1]=Double.parseDouble(tfsw1.getText())/sfo;
 
								slider.setValue((int)(0.1d/sw[1]*(double)slider.getMaximum()));
				g3flag=5;DjPanel.this.repaint();
			}
		});
             tftd1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent event) {
				td[1]=Integer.parseInt(tftd1.getText());
                                g3flag=6;DjPanel.this.repaint();
			}
		});
/*        tftd0.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent event) {
							td[0]=Integer.parseInt(tftd0.getText());


                                //DjPanel.this.repaint();
			}
		});*/
       button0.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent event) {
							sw[1]=cosa.sw0/sfo;
							td[1]=cosa.td0;
							if (un[1]==1) tfsw1.setText(""+(sw[1])); else    tfsw1.setText(""+(sw[1]*sfo));
							 tftd1.setText(""+(td[1]));
							 slider.setValue((int)(0.1d/sw[1]*(double)slider.getMaximum()));
							 g3flag=7;DjPanel.this.repaint();			}
	});
        button1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent event) {

							sw[1]=cosa.swswop/sfo;
							 td[1]=cosa.td;
							if (un[1]==1) tfsw1.setText(""+(sw[1])); else    tfsw1.setText(""+(sw[1]*sfo));

							 tftd1.setText(""+(td[1]));
                                slider.setValue((int)(0.1d/sw[1]*(double)slider.getMaximum()));
                            
                               g3flag=8; DjPanel.this.repaint();	
}
	});
	

/////////// Start load from data ///////////////
/*name,sw0,td0,swa,tda,number,ppm[],lv[],o1p*/


samplenumber=0;
 sw[0]=Double.parseDouble(data[samplenumber][1]); 
 sw[1]=Double.parseDouble(data[samplenumber][3]);
 td[0]=Integer.parseInt(data[samplenumber][2]); 
 td[1]=Integer.parseInt(data[samplenumber][4]);
        tftd1.setText(""+(td[1]));
        if (un[1]==1)tfsw1.setText(""+(sw[1])); else tfsw1.setText(""+(sw[1]*sfo));
 nbc=Integer.parseInt(data[samplenumber][5]);j=nbc;
 min=1999995555559d;
 max=-1222222444442d;
 for(i=0;i<j;i++){
		ppm[i]=Double.parseDouble(data[samplenumber][6+i]); 
if(ppm[i]<min) min=ppm[i];
		lw[i]=Double.parseDouble(data[samplenumber][6+i+j]);
if(ppm[i]>max) max=ppm[i];
}
o1p[0]=(max+min)/2d;
o1p[1]=o1p[0];
if(Double.parseDouble(data[samplenumber][6+j+j]) == 0d) o1p[1]=o1p[0];else o1p[1]=Double.parseDouble(data[samplenumber][6+j+j]) ;
cf.setText(""+o1p[1]);

for(i=0;sampletot==0;i++){
	if(Double.parseDouble(data[i][1]) == 0) sampletot=i;
}

/////////// End load from data////////////////
		slider = aSlider;
		slider.addAdjustmentListener(this);
		slider.setMinimum((int)(0.1*(double)slider.getMaximum()/sw[0]));
		tftd1.setText(""+(td[1]));
		if (un[1]==1)
                                    tfsw1.setText(""+(sw[1])); else 
                                    tfsw1.setText(""+(sw[1]*sfo));
}
	public void setSfo(double sfo2) {
		sfo=sfo2;
		if (un[1]==1) tfsw1.setText(""+(sw[1])); else    tfsw1.setText(""+(sw[1]*sfo));
		DjPanel.this.repaint();
	}
	public void setData(String pdata) {
/////////////// Start read String of data //////
		for(int j=0;j<dii*3-1;j++)data[samplenumber][j]="";

			data[samplenumber][0]="from Javascript";
			
				
		aDI= new DataInputStream(new StringBufferInputStream(pdata)); //OK
		dii=0;try {while((line = aDI.readLine()) != null) {dii++;}		}  catch (IOException e){;}

				word=Integer.toString(dii);data[samplenumber][5]=word;
			applet.showStatus("CHeck "+word);
		aDI= new DataInputStream(new StringBufferInputStream(pdata)); //OK
		dii2=0;try {while((line = aDI.readLine()) != null) {
				st = new StringTokenizer(line);
				word=st.nextToken();data[samplenumber][6+dii2]=word;
				if(st.hasMoreTokens()) {word=st.nextToken();data[samplenumber][6+dii2+dii]=word;}
				else {
					if(dii2==0){data[samplenumber][6+dii2+dii]="1.00";}
					else{data[samplenumber][6+dii2+dii]=data[samplenumber][6+dii2+dii-1]+"";}
				}
				stri="";//+st.countTokens()+" ";
				while(st.hasMoreTokens()){
					stri=stri+st.nextToken()+" ";
				}
		System.out.println("at line : "+dii2+"protdim:"+stri);
				data[samplenumber][7+dii+dii+dii2]=stri;
				dii2++;
				
				System.out.println(da);
			applet.showStatus("CHeck 2+"+dii2);


		} } catch (IOException e){;}
			applet.showStatus("CHeck 3:"+dii2);

		nbc=Integer.parseInt(data[samplenumber][5]);
		double tmpd=0;
	min=1999995555559d;
	max=-1222222444442d;
	for(int j=0;j<nbc;j++){i=j;

				ppm[j]=Double.parseDouble(data[samplenumber][6+i]);
				lw[j]=Double.parseDouble(data[samplenumber][6+nbc+i]);
				protdim[j][0]=0;
				
								aDI= new DataInputStream(new StringBufferInputStream(data[samplenumber][6+2*nbc+i+1])); //OK
								dii2=0;try {while((line = aDI.readLine()) != null) {
					System.out.println("line : "+line);
								
								st = new StringTokenizer(line);
								k=0;protdim[j][0]=k;
								while(st.hasMoreTokens()){
									word=st.nextToken("-");
								    System.out.println("."+word);
									protdim[j][k*2+1]=Double.parseDouble(word); 
									word=st.nextToken(" ");
								    System.out.println("."+word);
									protdim[j][k*2+2]=-Double.parseDouble(word); 
									if(protdim[j][k*2+2]>protdim[j][k*2+1]) {o1p[0]=protdim[j][k*2+1];protdim[j][k*2+1]=protdim[j][k*2+2];protdim[j][k*2+2]=o1p[0];}
								    System.out.println("w."+(protdim[j][k*2+1]-protdim[j][k*2+2]));
									k++;protdim[j][0]=k;
								}
								protdim[j][0]=k;				
							}}  catch (IOException e){;}

			
		

	}		
	min=1999995555559d;
	max=-1222222444442d;
	for(j=0;j<nbc;j++){
		for(int i=1;i<2*(int)(protdim[j][0])+1;i++){
		if(min>protdim[j][i]) min=protdim[j][i];
		if(max<protdim[j][i]) max=protdim[j][i];
		}
	}
	scaleh=1d/(max-min);		////1/(maxh-minh)
	offseth=max;			///  (maxh)
		

	min=1999995555559d;
	max=-1222222444442d;
	for(i=0;i<nbc;i++){
								if(ppm[i]<min) min=ppm[i];
								if(ppm[i]>max) max=ppm[i];
	}
	o1p[0]=(max+min)/2d;
	//o1p[1]=(max+min)/2d;
	sw[0]=(max-min);
	System.out.println("min"+min+"max"+max+"unchanged o1p"+o1p[1]+"sw"+sw[0]);
	//////// dump data format
	stri="      {";
	for(i=0;i<7+nbc*3;i++) stri=stri+"\""+data[samplenumber][i]+"\",";
	stri=stri+"\"0\"},";
	fill_sasi();
	////////
		g3flag=9;DjPanel.this.repaint();


/////////////// END read String of data //////		
	}
	public void seto2p(double o2pp) {
		o1p[0]=o2pp;
		o1p[01]=o2pp;
		cf.setText(""+o1p[1]);

		DjPanel.this.repaint();
	}
	public void actionPerformed(ActionEvent event){
			System.out.println("pasting in"+samplenumber);

					input  = new QuestionDialog(	Util.getFrame(this), 	this,"Data edition", "Data", 	data[samplenumber], 45, image,true);
					input.setVisible(true);
					//System.out.println("pasting out"+sampletot);
					for(int ii=0;ii<sampletot;ii++) {simple.add(data[ii][0]);}
					for(int ii=0;ii<sampletot;ii++) {simple.remove(simple.getItem(0));}
					simple.select(samplenumber);

	}	

	public void dialogDismissed(Dialog d) {
		if(input.wasCancelled()){
		System.out.println("canceled");

			applet.showStatus("CANCELLED");
		}	
			 
		else {
		comment="";
			applet.showStatus("Sample:  " + input.getTextField().getText());
			pdata=input.getTextArea().getText();
/////////////// Start read String of data //////

			data[samplenumber][0]=input.getTextField().getText();
			
				
		aDI= new DataInputStream(new StringBufferInputStream(pdata)); //OK
		dii=0;try {while((line = aDI.readLine()) != null) {dii++;}		}  catch (IOException e){;}
				word=Integer.toString(dii);data[samplenumber][5]=word;

		aDI= new DataInputStream(new StringBufferInputStream(pdata)); //OK
		dii2=0;try {while((line = aDI.readLine()) != null) {
				st = new StringTokenizer(line);
				word=st.nextToken();data[samplenumber][6+dii2]=word;
				if(st.hasMoreTokens()) {word=st.nextToken();data[samplenumber][6+dii2+dii]=word;}
				else {
					if(dii2==0){data[samplenumber][6+dii2+dii]="1.00";}
					else{data[samplenumber][6+dii2+dii]=data[samplenumber][6+dii2+dii-1]+"";}
				}
				stri="";//+st.countTokens()+" ";
				while(st.hasMoreTokens()){
					stri=stri+st.nextToken()+" ";
				}
		System.out.println("at line : "+dii2+"protdim:"+stri);
				data[samplenumber][7+dii+dii+dii2]=stri;
				dii2++;
				
				System.out.println(da);


		} } catch (IOException e){;}

		nbc=Integer.parseInt(data[samplenumber][5]);
		double tmpd=0;
		min=1999995555559d;
	for(int j=0;j<nbc;j++){
		max=-1222222444442d;
		for(int i=0;i<nbc;i++){
			tmpd=Double.parseDouble(data[samplenumber][6+i]);
			if(tmpd>max && tmpd<min){
				ppm[j]=Double.parseDouble(data[samplenumber][6+i]);
				lw[j]=Double.parseDouble(data[samplenumber][6+nbc+i]);
				protdim[j][0]=0;
				max=tmpd;
				
								aDI= new DataInputStream(new StringBufferInputStream(data[samplenumber][6+2*nbc+i+1])); //OK
								dii2=0;try {while((line = aDI.readLine()) != null) {
					System.out.println("line : "+line);
				
								st = new StringTokenizer(line);
								k=0;
								while(st.hasMoreTokens()){
									word=st.nextToken("-");
								    System.out.println("."+word);
									protdim[j][k*2+1]=Double.parseDouble(word); 
									word=st.nextToken(" ");
								    System.out.println("."+word);
									protdim[j][k*2+2]=-Double.parseDouble(word); 
									if(protdim[j][k*2+2]>protdim[j][k*2+1]) {o1p[0]=protdim[j][k*2+1];protdim[j][k*2+1]=protdim[j][k*2+2];protdim[j][k*2+2]=o1p[0];}
								    System.out.println("w."+(protdim[j][k*2+1]-protdim[j][k*2+2]));
									k++;
								}
								protdim[j][0]=k;				
							}}  catch (IOException e){;}

			}
		}
		min=max;
	}		
	min=1999995555559d;
	max=-1222222444442d;
	for(j=0;j<nbc;j++){
		for(int i=1;i<2*(int)(protdim[j][0])+1;i++){
		if(min>protdim[j][i]) min=protdim[j][i];
		if(max<protdim[j][i]) max=protdim[j][i];
		}
	}
	scaleh=1d/(max-min);		////1/(maxh-minh)
	offseth=max;			///  (maxh)
		

	min=1999995555559d;
	max=-1222222444442d;
	for(i=0;i<nbc;i++){
								if(ppm[i]<min) min=ppm[i];
								if(ppm[i]>max) max=ppm[i];
	}
	o1p[0]=(max+min)/2d;
	//o1p[1]=(max+min)/2d;
	sw[0]=(max-min);
	System.out.println("min"+min+"max"+max+"unchanged o1p"+o1p[1]+"sw"+sw[0]);
	//////// dump data format
	stri="      {";
	for(i=0;i<7+nbc*3;i++) stri=stri+"\""+data[samplenumber][i]+"\",";
	stri=stri+"\"0\"},";
		System.out.println(stri);
	fill_sasi();
	////////
		g3flag=9;DjPanel.this.repaint();


	//		for(int ii=0;ii<sampletot;ii++) {simple.remove(ii);System.out.println("removed "+simple.getItem(ii)+ii);}
/////////////// END read String of data //////

}
	
	}
	
	
	public void fill_sasi(){
		
for(i=0;i<nbc;i++) 
	for(j=0;j<nbc;j++) 
		sasi[i][j]=0;

max=-20000000;min=5000000;
System.out.println(".. FFIILL SSAASSII . ");
for(i=0;i<nbc;i++) {
	if(max<ppm[i]) max=ppm[i];
	if(min>ppm[i]) min=ppm[i];
	ol[i]=sfo*ppm[i];
	addelta[i]=lw[i];

//	fprintf(stdout,"Signal #%3d :  %10.4lf ppm (%12.2lf Hz) width: %4.1lf Hz\n",i+1,ppmm[i],ol[i],2*addelta[i]);
}
//System.out.println("System entering \n");for(m=0;m<nbc;m++){ 		System.out.println("Signal "+m+" at "+ppm[m]+" ppm ("+ol[m]*2+" Hz) lw = "+addelta[m]+" Hz");}

//Below before was fusing two signals that could not be separated. Now, label sasi=-1
for(i=0;i<nbc;i++) {
for(j=i+1;j<nbc;j++) {
if(ol[i]>ol[j]) {
	if((ol[i]-addelta[i])<((ol[j]+addelta[j]+(1d/inputt1max)))) {   //////// HERE CORRECTION needed to take into acound fadr ?? Here assumes 1 ?
		System.out.println("Carbons "+(i+1)+" and "+(j+1)+" at "+ppm[j]+" and "+ppm[i]+" ppm are too close to be resolvable !\n");
		comment=comment+("Carbons "+(i+1)+" and "+(j+1)+" at "+ppm[j]+" and "+ppm[i]+" ppm are too close to be resolvable !\n");


		if(((ol[i]-addelta[i])-(ol[j]+addelta[j]))>0) {
			System.out.println("Considering the line with of each ("+addelta[j]*2.0+" and "+addelta[i]*2+" Hz) the space between them is "+((ol[i]-addelta[i])-(ol[j]+addelta[j]))+" Hz. \n");
			comment=comment+("Considering the line with of each ("+addelta[j]*2.0+" and "+addelta[i]*2+" Hz) the space between them is "+((ol[i]-addelta[i])-(ol[j]+addelta[j]))+" Hz. \n");
			System.out.println("This is so small that it would require a t1,max as high as "+ 1/(((ol[i]-addelta[i])-(ol[j]+addelta[j])   ))+" s to resolve them (SNR would prob. be to small).\nFor the calculations overlap between them will be allowed!\n" );
			comment=comment+("This is so small that it would require a t1,max as high as "+ 1/(((ol[i]-addelta[i])-(ol[j]+addelta[j])   ))+" s to resolve them (SNR would prob. be to small).\nFor the calculations overlap between them will be allowed!\n" );
		} else {
			System.out.println("Considering the line with of each ("+(addelta[j]*2.0)+" and "+addelta[i]*2+" Hz) they touch each other.\nIt it impossible to resolved whatever the acquisition conditions.\n"); 
			comment=comment+("Considering the line with of each ("+(addelta[j]*2.0)+" and "+addelta[i]*2+" Hz) they touch each other.\nIt it impossible to resolved whatever the acquisition conditions.\n"); 
		}//pr++;
	if((ol[i]+addelta[i])<(ol[j]+addelta[j])){ //j includes i
////		ol[i]=ol[j]; ppm[i]=ppm[j]; addelta[i]=addelta[j];
		System.out.println("The second includes the first.\n");
		comment=comment+("The second includes the first.\n");
		}else{
		if((ol[i]-addelta[i])<(ol[j]-addelta[j])) //i includes j
		{System.out.println("The first includes the second.\n");
		comment=comment+("The first includes the second.\n");}
		else
		{ 
////		tmpd3=((ol[i]+addelta[i])-(ol[j]-addelta[j]))/2.0;
////		ol[i]=((ol[i]+addelta[i])+(ol[j]-addelta[j]))/2.0;
////		ppm[i]=ol[i]/in_freq; 
////		addelta[i]=tmpd3; 
		}
	}
	sasi[i][j]=-1;sasi[j][i]=-1;////

	System.out.println("\n");
	comment=comment+("\n");
	}
}else{
	if((ol[j]-addelta[j])<((ol[i]+addelta[i]+(1d/inputt1max)))) { //////// HERE CORRECTION needed to take into acound fadr ?? Here assumes 1 ?
		System.out.println("Carbons "+(i+1)+" and "+(j+1)+" ,at "+ppm[j]+" and "+ppm[i]+" are too close to be resolvable !\n");
		System.out.println("Carbons "+(i+1)+" and "+(j+1)+" ,at "+ppm[j]+" and "+ppm[i]+" are too close to be resolvable !\n");
		if(((ol[j]-addelta[j])-(ol[i]+addelta[i]))>0){
		System.out.println("Considering the line with of each ("+addelta[j]*2.0+"and"+addelta[i]*2+" Hz) the space between them is "+((ol[j]-addelta[j])-(ol[i]+addelta[i]))+" Hz. \nThis is so small that it would require a t1,max as high as "+ (1/(((ol[j]-addelta[j])-(ol[i]+addelta[i])   )))+" s to resolve them (SNR would prob. be to small).\nFor the calculations overlap between them will be allowed!\n");
		comment=comment+("Considering the line with of each ("+addelta[j]*2.0+"and"+addelta[i]*2+" Hz) the space between them is "+((ol[j]-addelta[j])-(ol[i]+addelta[i]))+" Hz. \nThis is so small that it would require a t1,max as high as "+ (1/(((ol[j]-addelta[j])-(ol[i]+addelta[i])   )))+" s to resolve them (SNR would prob. be to small).\nFor the calculations overlap between them will be allowed!\n");
		}
		else{
		System.out.println("Considering the line with of each ("+addelta[j]*2.0+"and"+addelta[i]*2+" Hz) they touch each other.\nIt it impossible to resolved whatever the acquisition conditions.\n"); 
		comment=comment+("Considering the line with of each ("+addelta[j]*2.0+"and"+addelta[i]*2+" Hz) they touch each other.\nIt it impossible to resolved whatever the acquisition conditions.\n"); 
		}//pr++;
	if((ol[j]+addelta[j])<(ol[i]+addelta[i])){ //i includes j
////		ol[i]=ol[j]; ppm[i]=ppm[j]; addelta[i]=addelta[j];
		System.out.println("The second includes the first.\n");
		comment=comment+("The second includes the first.\n");
		}else{
		if((ol[j]-addelta[j])<(ol[i]-addelta[i])) //j includes i
		{System.out.println("The first includes the second.\n");
		comment=comment+("The first includes the second.\n");}
		else
		{
////		tmpd3=((ol[j]+addelta[j])-(ol[i]-addelta[i]))/2.0;
////		ol[i]=((ol[j]+addelta[j])+(ol[i]-addelta[i]))/2.0;
////		ppm[i]=ol[i]/in_freq; 
////		addelta[i]=tmpd3; 
		}
	}
////	for(m=j+1;m<nbc;m++){ ppm[m-1]=ppm[m]; addelta[m-1]=addelta[m]; ol[m-1]=ol[m]; } nbc-=1;
		sasi[i][j]=-1;sasi[j][i]=-1;////

	System.out.println("\n");
////	i-=1;break;
	}
}
}
}

	}
	  public void outsparky(double hstep) {	
				final Frame my_frame = new Frame("Output file for Sparky");
				final TextArea can = new TextArea("");
				 double vp;
				my_frame.add(can,"Center");
			final Panel toppanel = new Panel(new BorderLayout(2,2));
			final Label outp = new Label("Open the aliased spectrum with Sparky and save it. (.save file)");
			final Label oute = new Label("Copy the text below and paste it into the <ornament> section of the Sparky .save file.");
			final Label outa = new Label("Reload the file and type \"vR\" to view the labels."+o1p[1]);
			int i,j,k=0;
			double hppm,hlw,hstepl;
			toppanel.add(outp,"North");
			toppanel.add(oute,"Center");
			toppanel.add(outa,"South");
			my_frame.add(toppanel,"North");
			Button but = new Button("OK !");
			my_frame.add(but,"South");
			String hstr="";
			my_frame.setSize(550,500);my_frame.show();
			if(hstep==0d)hstep=199999d;
			for(i=0;i<nbc;i++) //loop over carbones
			 for(j=0;j<(int)(protdim[i][0]) || j==0 ;j++) //loop over proton dispersion regions
			  {
				if((int)(protdim[i][0]) == 0) 
				//case no protdim
					{hppm=1515d;hlw=1d;hstr="?";}
				else 
				//case protdim & no dots
				{
					hppm=0.5d*(protdim[i][j*2+1]+protdim[i][j*2+2]);hlw=sfo*(protdim[i][j*2+1]-protdim[i][j*2+2]);
					hstr="H";if((int)(protdim[i][0])>1 )hstr+=""+(j+1);hstr+="-C"+(i+1);
				}
				//case protdim & dots
				if(hstep!=199999d) hppm=protdim[i][j*2+2];
				for(hstepl=hppm;hstepl<protdim[i][j*2+1] || hstepl==hppm;hstepl+=hstep){
					can.append("type peak\ncolor 0 2 0 white\nflags 0 0 0 0\nid "+k+"\n");k++;
						if((ppm[i]-o1p[1]+sw[1]/2f)<0)
							vp=(((ppm[i]-o1p[1]+  sw[1]/2f) % sw[1])+  o1p[1]+sw[1]/2f); //for case when % gives negative values
						else
							vp=(((ppm[i]-o1p[1]+  sw[1]/2f) % sw[1])+  o1p[1]-sw[1]/2f); //orig
						can.append("pos "+(float)vp+" "+(float)hstepl+"\n");
					//can.append("pos "+(float)ppm[i]+" "+(float)hstepl+"\n");  this is OK when labels need not be active ! Sparky
					can.append("height 0.000 18808404.000\nlinewidth 1.280 "+(float)hlw+" 1/2\n");
					can.append("rs |?|"+"C"+(i+1)+"("+(float)ppm[i]+")"+"| |?|"+hstr+"|\n");
				}
			}
			but.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent event) {
				my_frame.hide();
			}});
}
public void outxwinplot() {	


				final Frame my_frame = new Frame("Output file for Bruker xwinplot");
				final TextArea can = new TextArea("");
				 int intdiv[] = new int[100];
				 int frfr[] = new int[1000];
				 double vp=0;
				my_frame.add(can,"Center");
			final Panel toppanel = new Panel(new BorderLayout(2,2));
			final Label outp = new Label("Copy the text below into any text editor");
			final Label oute = new Label("Save it in the folder $XWINNMR/plot/layouts or elsewhere with the file extention .xwp");
			final Label outa = new Label("Open it with xwinplot");
			 int m,n,o,mm,nn;
			 int maddx=3,addx=0,am=2000000000;
			 int dei=100,dem=1500,deo=5000,des=1000,flag,nbfr;
			 double min,max,min2,max2;
		
			toppanel.add(outp,"North");
			toppanel.add(oute,"Center");
			toppanel.add(outa,"South");
			my_frame.add(toppanel,"North");
			Button but = new Button("OK !");
			my_frame.add(but,"South");
			my_frame.setSize(550,500);my_frame.show();
			can.append("#!XWinPlot 3.1\nPrinterSetup 0.6 \"lp -c -s -n1 %s\" \"xpsview %s\" \"PostScript\" \"A3\" 8 1.5 1 1.5 1.5 1 1 1 1\nLayoutSetup 0.2 1\nObjectList\nDispVersion 1.23\nGC 9 16 0 0 0 f 1 1 16 0 0 0 f 0 0 5 423.333333333 0\nGC 10 17 0 0 0 f 1 1 1 0 0 0 f 0 0 0 0 0\nGC 11 18 0 0 0 f 1 1 1 0 0 0 f 0 0 0 0 0\nGC 12 19 0 0 0 f 1 1 1 0 0 0 f 0 0 0 0 0\nGC 13 16 0 0 0 f 0 1 1 0 0 0 f 0 0 1 705.556014167 0\nGC 14 23 0 0 0 f 1 1 16 0 0 0 f 0 0 0 423.333333333 0\nGC 15 19 0 0 0 f 1 1 16 0 0 0 f 0 0 5 423.333333333 0\nGC 16 18 0 0 0 f 1 1 16 0 0 0 f 0 0 0 423.333333333 0\nGC 17 16 0 0 0 f 1 1 16 0 0 0 f 0 0 0 282.222222222 0\nGC 18 16 0 0 0 f 1 1 16 0 0 0 f 0 0 5 493.888888889 0\nGC 19 17 0 0 0 f 1 1 16 0 0 0 f 0 0 5 493.888888889 0\nGC 21 17 0 0 0 f 1 1 22 0 0 0 f 0 0 5 493.888888889 0\nGC 22 17 0 0 0 f 1 1 16 0 0 0 f 0 0 5 881.944444444 0\n");
			intdiv[0]=15;
			intdiv[1]=14;
			intdiv[2]=0;
			intdiv[3]=9;
			intdiv[4]=0;
			intdiv[5]=21100;
			intdiv[6]=26700;
			intdiv[7]=1100;
			intdiv[8]=21;
			intdiv[9]=5;
			
			can.append("Spec2DProjGraph "+intdiv[0]+" "+intdiv[1]+" "+intdiv[2]+" "+intdiv[3]+" ("+intdiv[4]+"|"+intdiv[5]+") ("+intdiv[6]+"|"+intdiv[7]+") 0 7.91274358932 6.93643475061 101.187202454 97.7119344176 6 9 12652510 10 15302421 11 22383451 12 27071387 13 32741152 10 39598379 2 2 0 0 f t f f t f (0|0) 0.01 0.1 5 5 f t \"%.2f\" \"%.1f\" 16 t 1 4000 2 f 0 0 1 2 f f f\n");
			can.append("Title 0 19 (0|24000) (33000|3000) 0 0 0 493.888888889 f\n");
			min=1e8d;max=-1e8d;
			for( i=0;i<nbc;i++) { 
				if(min > ppm[i]) min = ppm[i];
				if(max < ppm[i]) max = ppm[i];
					vp=(((ppm[i]-o1p[1]+sw[1]/2f) % sw[1])/sw[1]); if (vp<0.0d)vp+=1;// from 0 to 1
			}
			nbfr=0;min2=0;
			for( j=0;j<nbc;j++) {
				max2=1e8;
				for(k=0;k<nbc;k++){
					vp=(((ppm[k]-o1p[1]+sw[1]/2f) % sw[1])/sw[1]); if(vp<0.0d) vp+=1;// from 0 to 1
					if(vp<max2 && vp>min2) {max2=vp;i=k;} /* starts from top */
				}
				vp=(((ppm[i]-o1p[1]+sw[1]/2f) % sw[1])/sw[1]);if (vp<0.0d)vp+=1;
				frfr[nbfr]=i;nbfr++;min2=vp;			}
			//for(i=0;i<nbc;i++)System.out.println("here "+(i+1)+" .. "+(frfr[i]+1)+" "+min2+"");
				for(i=0;i<nbc;i++){

				vp=(((ppm[frfr[i]]-o1p[1]+sw[1]/2f) % sw[1])/sw[1]); if(vp<0.0d) vp+=1; vp=1-vp;// from 0 to 1
				//can.append("pos "+(float)vp+" 5.000\n");
				m=(int)(((float)intdiv[5]-(float)intdiv[7])*vp )+intdiv[7];
				o=(int)(((float)intdiv[5]-(float)intdiv[7])*(ppm[frfr[i]]-min)/(max-min)+(float)intdiv[7]);

				//mm=(intdiv[6]-intdiv[4])*( .... posistion  0-1 ...  )+intdiv[4];

	//For squares ... set vi and wi (width of rectangle in both dimensions
	//FIX 			can.append("ArrowPolyLine %d 5 (%d|%d)  (%d|%d) (%d|%d) (%d|%d)  (%d|%d) 500 0\n",intdiv[8],mm-vi,m-wi,mm-vi,m+wi,mm+vi,m+wi,mm+vi,m-wi,mm-vi,m-wi);
	//FIx notatin	can.append("ResizeableText %d (%d|%d)  (%d|%d) 2 0 0 \"C%2d\" 190.00 t\n",intdiv[8],mm+vi+200,m-0*100,mm+vi+200+dei+dem,m+wi-0*100,frfr[j]);
				mm=intdiv[4];
				nn=intdiv[6];
			//	System.out.println("here m:"+m+" am:"+am+"  "+addx); 
				if((am-m)<200) addx++; else addx=0;if(addx>=maddx) addx=0;
				am=m;
		can.append("ArrowPolyLine "+intdiv[8]+" 2 ("+mm+"|"+m+")  ("+(nn+dem*addx)+"|"+m+") 500 0\n");
		can.append("ArrowPolyLine "+intdiv[8]+" 4 ("+(nn+dem*addx)+"|"+m+")  ("+(nn+ dem*maddx)+"|"+m+") ("+(nn+dem*maddx+deo)+"|"+(o)+") ("+(nn+maddx*dem+deo+des)+"|"+(o)+") 500 0\n");
		can.append("ResizeableText "+intdiv[8]+" ("+(nn+ dem*addx+200)+"|"+(m-100)+") ");
		can.append(" ("+(nn+dem+dem*addx+dei)+"|"+(m-100)+") ");
		can.append("2 0 0 \"C"+(frfr[i]+1)+"-");
		can.append(""+(float)(ppm[frfr[i]])+"");
		can.append(" \" 190.00 t\n");

		//	can.append("height 0.000 18808404.000\nlinewidth 1.280 7.433 1/2\n");
		//		can.append("rs |?|"+"C"+(i+1)+"("+(float)ppm[i]+")"+"| |?|?|\n");
			}
				nn=intdiv[6];
			can.append("ResizeableText "+intdiv[8]+" ("+intdiv[4]+"|"+(intdiv[5]+4400)+")  ("+(intdiv[4]+20000)+"|"+(intdiv[5]+4200)+") 2 0 0 \"COSA SWa="+(float)sw[1]+" TDa="+td[1]+" t1,max= "+(float)(td[1]/(2.0*sw[1]*sfo))+" s\" 200.00 t\n");
			can.append("ResizeableText "+intdiv[8]+" ("+intdiv[4]+"|"+(intdiv[5]+4200)+")  ("+(intdiv[4]+20000)+"|"+(intdiv[5]+4000)+") 2 0 0 \"The same resolution would require TD0="+td[0]+" (for SW0="+(float)(sw[0]*sfo)+" Hz = "+(float)(sw[0])+" ppm). Save a factor "+(float)(td[0]/td[1])+" in acquisition time when not limitted by concentration.\" 200.00 t\n"); 
			can.append("ResizeableText "+intdiv[8]+" ("+intdiv[4]+"|"+(intdiv[5]+4000)+")  ("+(intdiv[4]+20000)+"|"+(intdiv[5]+3800)+") 2 0 0 \"Refs. Jeannerat, (in preparation) and Jeannerat, Magn. Reson. in Chem. Vol.41 p3-17 (2002).\" 200.00 t\n");

			can.append("ArrowPolyLine "+(intdiv[8])+" 2 ("+(nn+maddx*dem+deo)+"|"+intdiv[5]+")  ("+(nn+maddx*dem+deo)+"|"+(intdiv[7])+") 500 0\n");
			can.append("ResizeableText "+(intdiv[8])+" ("+(nn+maddx*dem+deo)+"|"+intdiv[5]+")  ("+(nn+maddx*dem+deo+des)+"|"+(intdiv[5])+") 2 0 0 \"C 1-"+max+" ppm\" 190.00 t\n");
			can.append("ResizeableText "+(intdiv[8])+" ("+(nn+maddx*dem+deo)+"|"+(intdiv[7]-200)+")  ("+(nn+maddx*dem+deo+des)+"|"+(intdiv[7]-200)+") 2 0 0 \"C "+nbc+"-"+min+" ppm\" 190.00 t\n");



			
			but.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent event) {
				my_frame.hide();
			}});
	}		
	
	public void dialogCancelled(Dialog d) {
		//applet.showStatus("Dialog Cancelled");
	}

}
/////////////////////////////////////////
/////////////////////////////////////////
/////////////////////////////////////////
